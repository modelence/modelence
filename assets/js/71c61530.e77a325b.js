"use strict";(self.webpackChunkmodelence_docs=self.webpackChunkmodelence_docs||[]).push([[231],{1853:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>i,contentTitle:()=>d,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"quick-start/tutorial-basics/add-todos-page","title":"Add Todos page","description":"Modelence is mostly frontend-agnostic, so you are free to use any routing library you like.","source":"@site/docs/quick-start/tutorial-basics/add-todos-page.md","sourceDirName":"quick-start/tutorial-basics","slug":"/quick-start/tutorial-basics/add-todos-page","permalink":"/quick-start/tutorial-basics/add-todos-page","draft":false,"unlisted":false,"editUrl":"https://github.com/modelence/modelence/tree/main/docs/docs/quick-start/tutorial-basics/add-todos-page.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"quickStartSidebar","previous":{"title":"Create a Module","permalink":"/quick-start/tutorial-basics/create-a-module"}}');var s=o(4848),r=o(8453);const a={sidebar_position:3},d="Add Todos page",i={},c=[{value:"Create a new client route",id:"create-a-new-client-route",level:2},{value:"Create the TodosPage component",id:"create-the-todospage-component",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"add-todos-page",children:"Add Todos page"})}),"\n",(0,s.jsx)(t.p,{children:"Modelence is mostly frontend-agnostic, so you are free to use any routing library you like.\nWe will use React Router for this example, which is what's included in the default Modelence starter."}),"\n",(0,s.jsx)(t.h2,{id:"create-a-new-client-route",children:"Create a new client route"}),"\n",(0,s.jsxs)(t.p,{children:["Edit ",(0,s.jsx)(t.code,{children:"src/client/routes.ts"})," to add a new route for our todos:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",metastring:'title="src/client/routes.ts"',children:"import { lazy } from 'react';\n\nexport const routes = [\n  ...\n  // Add this after the other routes\n  {\n    path: '/todos',\n    Component: lazy(() => import('./TodosPage'))\n  },\n  ...\n];\n"})}),"\n",(0,s.jsx)(t.h2,{id:"create-the-todospage-component",children:"Create the TodosPage component"}),"\n",(0,s.jsxs)(t.p,{children:["Create a new component at ",(0,s.jsx)(t.code,{children:"src/client/TodosPage.tsx"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-tsx",metastring:'title="src/client/TodosPage.tsx"',children:"import { useQuery } from 'modelence/client';\n\nexport default function TodosPage() {\n  /*\n    Modelence provides a `useQuery` React hook that fetches data from a module query.\n    It will automatically re-fetch the data if/when the query changes and can also accept arguments.\n  */\n  const { data: todos, isFetching, error } = useQuery('todo.getAll');\n  // TODO: add a mutation to add a new todo\n\n  if (isFetching) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Todos</h1>\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo.id}>{todo.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Now, you should be able to see your page at ",(0,s.jsx)(t.a,{href:"http://localhost:3000/todos",children:"http://localhost:3000/todos"})]})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>d});var n=o(6540);const s={},r=n.createContext(s);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);