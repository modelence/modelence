"use strict";(self.webpackChunkmodelence_docs=self.webpackChunkmodelence_docs||[]).push([[112],{3784:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>d,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"api-reference/hooks/useQuery","title":"useQuery","description":"","source":"@site/docs/api-reference/hooks/useQuery.md","sourceDirName":"api-reference/hooks","slug":"/api-reference/hooks/useQuery","permalink":"/docs/api-reference/hooks/useQuery","draft":false,"unlisted":false,"editUrl":"https://github.com/modelence/modelence/tree/main/docs/docs/api-reference/hooks/useQuery.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"apiSidebar","previous":{"title":"React Hooks","permalink":"/docs/category/react-hooks"},"next":{"title":"useMutation","permalink":"/docs/api-reference/hooks/useMutation"}}');var s=r(4848),o=r(8453);function i(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"../../../README.md",children:(0,s.jsx)(n.strong,{children:"modelence"})})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"../../../README.md",children:"modelence"})," / ",(0,s.jsx)(n.a,{href:"../README.md",children:"client/method"})," / useQuery"]}),"\n",(0,s.jsx)(n.h1,{id:"function-usequery",children:"Function: useQuery()"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"function useQuery<T>(methodName, args): MethodResult<T> & object\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Defined in: ",(0,s.jsx)(n.a,{href:"https://github.com/modelence/modelence/blob/main/client/method.ts#L96",children:"client/method.ts:96"})]}),"\n",(0,s.jsx)(n.p,{children:"React hook for executing a query method."}),"\n",(0,s.jsx)(n.p,{children:"This hook automatically executes the query on mount and provides a refetch capability.\nSimilar to React Query's useQuery hook."}),"\n",(0,s.jsx)(n.h2,{id:"type-parameters",children:"Type Parameters"}),"\n",(0,s.jsxs)(n.p,{children:["\u2022 ",(0,s.jsx)(n.strong,{children:"T"})," = ",(0,s.jsx)(n.code,{children:"unknown"})]}),"\n",(0,s.jsx)(n.p,{children:"The expected return type of the query"}),"\n",(0,s.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(n.h3,{id:"methodname",children:"methodName"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"string"})}),"\n",(0,s.jsx)(n.p,{children:"The name of the method to query"}),"\n",(0,s.jsx)(n.h3,{id:"args",children:"args"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Args"})," = ",(0,s.jsx)(n.code,{children:"{}"})]}),"\n",(0,s.jsx)(n.p,{children:"Optional arguments to pass to the method"}),"\n",(0,s.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"MethodResult"}),"<",(0,s.jsx)(n.code,{children:"T"}),"> & ",(0,s.jsx)(n.code,{children:"object"})]}),"\n",(0,s.jsx)(n.p,{children:"An object containing the query state and a refetch function:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"data"})," - The data returned by the query, or null if not yet loaded"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"isFetching"})," - Boolean indicating if the query is in progress"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"error"})," - Any error that occurred during the query, or null"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"refetch"})," - Function to manually trigger a refetch with optional new arguments"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"function MyComponent() {\n  // This is assuming you have a Module named \"todo\" with a query named \"getItem\"\n  const { data, isFetching, error } = useQuery<Todo>('todo.getItem', { id: '123' });\n  if (isFetching) {\n    return <div>Loading...</div>;\n  }\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n  return <div>{data?.name}</div>;\n}\n"})})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}const d={sidebar_position:1},a="useQuery",l={},h=[{value:"Type Parameters",id:"type-parameters",level:2},{value:"Parameters",id:"parameters",level:2},{value:"methodName",id:"methodname",level:3},{value:"args",id:"args",level:3},{value:"Returns",id:"returns",level:2},{value:"Example",id:"example",level:2}];function u(e){const n={h1:"h1",header:"header",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"usequery",children:"useQuery"})}),"\n","\n",(0,s.jsx)(c,{})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var t=r(6540);const s={},o=t.createContext(s);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);