"use strict";(self.webpackChunkmodelence_docs=self.webpackChunkmodelence_docs||[]).push([[9687],{7309:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"quick-start/tutorial-basics/create-a-blog-post","title":"Create client routes","description":"Modelence is not opinionated about frontend, so you are free to use any routing library you like.","source":"@site/docs/quick-start/tutorial-basics/create-a-blog-post.md","sourceDirName":"quick-start/tutorial-basics","slug":"/quick-start/tutorial-basics/create-a-blog-post","permalink":"/docs/quick-start/tutorial-basics/create-a-blog-post","draft":false,"unlisted":false,"editUrl":"https://github.com/modelence/modelence/tree/main/docs/docs/quick-start/tutorial-basics/create-a-blog-post.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"quickStartSidebar","previous":{"title":"Create a Module","permalink":"/docs/quick-start/tutorial-basics/create-a-module"},"next":{"title":"Markdown Features","permalink":"/docs/quick-start/tutorial-basics/markdown-features"}}');var r=o(4848),s=o(8453);const a={sidebar_position:3},i="Create client routes",c={},d=[{value:"Create a new client route",id:"create-a-new-client-route",level:2},{value:"Create the TodosPage component",id:"create-the-todospage-component",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"create-client-routes",children:"Create client routes"})}),"\n",(0,r.jsx)(t.p,{children:"Modelence is not opinionated about frontend, so you are free to use any routing library you like.\nWe will use React Router for this example, which is what's included in the default Modelence starter."}),"\n",(0,r.jsx)(t.h2,{id:"create-a-new-client-route",children:"Create a new client route"}),"\n",(0,r.jsxs)(t.p,{children:["Edit ",(0,r.jsx)(t.code,{children:"src/client/routes.ts"})," to add a new route for our todos:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",metastring:'title="src/client/routes.ts"',children:"import { lazy } from 'react';\n\nexport const routes = [\n  ...\n  // Add this after the other routes\n  {\n    path: '/todos',\n    Component: lazy(() => import('./TodosPage'))\n  },\n  ...\n];\n"})}),"\n",(0,r.jsx)(t.h2,{id:"create-the-todospage-component",children:"Create the TodosPage component"}),"\n",(0,r.jsxs)(t.p,{children:["Create a new component at ",(0,r.jsx)(t.code,{children:"src/client/TodosPage.tsx"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",metastring:'title="src/client/TodosPage.tsx"',children:"import { useQuery } from 'modelence/client';\n\nexport default function TodosPage() {\n  /*\n    Modelence provides a `useQuery` React hook that fetches data from a module query.\n    It will automatically re-fetch the data if/when the query changes and can also accept arguments.\n  */\n  const { data: todos, isFetching, error } = useQuery('todo.getAll');\n\n  if (isFetching) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Todos</h1>\n      <ul>\n        {todos.map((todo) => (\n          <li key={todo.id}>{todo.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Now, once you add data to your ",(0,r.jsx)(t.code,{children:"todos"})," MongoDB collection, you should be able to see it at ",(0,r.jsx)(t.a,{href:"http://localhost:3000/todos",children:"http://localhost:3000/todos"})]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>i});var n=o(6540);const r={},s=n.createContext(r);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);