{
	"schemaVersion": "2.0",
	"id": 430,
	"name": "Modelence API Reference",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 809,
			"name": "@modelence/ai",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 810,
					"name": "GenerateTextOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Options for the Modelence generateText function.\n\nThis interface extends all the standard AI SDK generateText options,\nbut replaces the model parameter with separate provider and model parameters."
							}
						]
					},
					"children": [
						{
							"id": 811,
							"name": "model",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The specific model name"
									}
								]
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/ai/src/index.ts#L26"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 812,
							"name": "provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The AI provider name"
									}
								]
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/ai/src/index.ts#L24"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@modelence/ai",
									"packagePath": "src/index.ts",
									"qualifiedName": "Provider"
								},
								"name": "Provider",
								"package": "@modelence/ai"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								811,
								812
							]
						}
					],
					"sources": [
						{
							"fileName": "index.ts",
							"line": 22,
							"character": 17,
							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/ai/src/index.ts#L22"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"packageName": "typescript",
								"packagePath": "lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"packageName": "@modelence/ai",
										"packagePath": "src/index.ts",
										"qualifiedName": "OriginalGenerateTextParams"
									},
									"name": "OriginalGenerateTextParams",
									"package": "@modelence/ai"
								},
								{
									"type": "literal",
									"value": "model"
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					]
				},
				{
					"id": 813,
					"name": "generateText",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 76,
							"character": 22,
							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/ai/src/index.ts#L76"
						}
					],
					"signatures": [
						{
							"id": 814,
							"name": "generateText",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates text using AI models with built-in Modelence configuration and telemetry.\n\nThis is a wrapper around the AI SDK's generateText function that automatically\nconfigures providers using Modelence's server-side configuration system."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A promise that resolves to the generated text result"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```typescript\nimport { generateText } from '@modelence/ai';\n\nconst response = await generateText({\n  provider: 'openai',\n  model: 'gpt-4o',\n  messages: [\n    { role: 'user', content: 'Write a haiku about programming' }\n  ],\n  temperature: 0.7\n});\n\nconsole.log(response.text);\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 76,
									"character": 22,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/ai/src/index.ts#L76"
								}
							],
							"parameters": [
								{
									"id": 815,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configuration options for text generation"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 810,
										"name": "GenerateTextOptions",
										"package": "@modelence/ai"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"packageName": "ai",
											"packagePath": "dist/index.d.ts",
											"qualifiedName": "GenerateTextResult"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"packageName": "ai",
													"packagePath": "dist/index.d.ts",
													"qualifiedName": "ToolSet"
												},
												"name": "ToolSet",
												"package": "ai"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "GenerateTextResult",
										"package": "ai"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						810
					]
				},
				{
					"title": "Functions",
					"children": [
						813
					]
				}
			],
			"readme": [
				{
					"kind": "text",
					"text": "# @modelence/ai\n\nAI engine for Modelence applications with built-in telemetry, based on https://ai-sdk.dev\n\n## Installation\n\n"
				},
				{
					"kind": "code",
					"text": "```bash\nnpm install @modelence/ai\n```"
				},
				{
					"kind": "text",
					"text": "\n\n## Usage\n\n### generateText\n\nA wrapper around [AI SDK](https://ai-sdk.dev)'s "
				},
				{
					"kind": "code",
					"text": "`generateText`"
				},
				{
					"kind": "text",
					"text": " with built-in Modelence configuration and telemetry.\n\n"
				},
				{
					"kind": "code",
					"text": "```typescript\nimport { generateText } from '@modelence/ai';\n\nconst response = await generateText({\n  provider: 'openai',\n  model: 'gpt-4o',\n  messages: [\n    { role: 'user', content: 'Hello, world!' }\n  ],\n});\n\nconsole.log(response.text);\n```"
				},
				{
					"kind": "text",
					"text": "\n\n#### Supported Providers\n\n- **OpenAI**: "
				},
				{
					"kind": "code",
					"text": "`provider: 'openai'`"
				},
				{
					"kind": "text",
					"text": ", models: "
				},
				{
					"kind": "code",
					"text": "`gpt-4o`"
				},
				{
					"kind": "text",
					"text": ", "
				},
				{
					"kind": "code",
					"text": "`gpt-4o-mini`"
				},
				{
					"kind": "text",
					"text": ", "
				},
				{
					"kind": "code",
					"text": "`gpt-3.5-turbo`"
				},
				{
					"kind": "text",
					"text": "\n- **Anthropic**: "
				},
				{
					"kind": "code",
					"text": "`provider: 'anthropic'`"
				},
				{
					"kind": "text",
					"text": ", models: "
				},
				{
					"kind": "code",
					"text": "`claude-3-5-sonnet-20241022`"
				},
				{
					"kind": "text",
					"text": ", "
				},
				{
					"kind": "code",
					"text": "`claude-3-haiku-20240307`"
				},
				{
					"kind": "text",
					"text": "\n- **Google**: "
				},
				{
					"kind": "code",
					"text": "`provider: 'google'`"
				},
				{
					"kind": "text",
					"text": ", models: "
				},
				{
					"kind": "code",
					"text": "`gemini-1.5-pro`"
				},
				{
					"kind": "text",
					"text": ", "
				},
				{
					"kind": "code",
					"text": "`gemini-1.5-flash`"
				},
				{
					"kind": "text",
					"text": "\n\n#### Configuration\n\nThe function automatically uses API keys from Modelence configuration:\n- OpenAI: "
				},
				{
					"kind": "code",
					"text": "`_system.openai.apiKey`"
				},
				{
					"kind": "text",
					"text": "\n- Anthropic: "
				},
				{
					"kind": "code",
					"text": "`_system.anthropic.apiKey`"
				},
				{
					"kind": "text",
					"text": "\n- Google: "
				},
				{
					"kind": "code",
					"text": "`_system.google.apiKey`"
				},
				{
					"kind": "text",
					"text": "\n\nYou don't need to manually set any of these configs as long as your application is using a [Modelence Cloud](https://modelence.com/cloud) backend - simply use the AI > Integrations tab in your Modelence Cloud dashboard to configure keys, and it will be automatically used and recognized by this package."
				}
			]
		},
		{
			"id": 779,
			"name": "@modelence/react-query",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 780,
					"name": "ModelenceQueryKey",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type helper for creating properly typed query keys"
							}
						]
					},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 86,
							"character": 12,
							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/react-query/src/index.ts#L86"
						}
					],
					"typeParameters": [
						{
							"id": 781,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 782,
							"name": "U",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"packageName": "@modelence/react-query",
									"packagePath": "src/index.ts",
									"qualifiedName": "Args"
								},
								"name": "Args",
								"package": "@modelence/react-query"
							},
							"default": {
								"type": "reference",
								"target": {
									"packageName": "@modelence/react-query",
									"packagePath": "src/index.ts",
									"qualifiedName": "Args"
								},
								"name": "Args",
								"package": "@modelence/react-query"
							}
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "tuple",
							"elements": [
								{
									"type": "reference",
									"target": 781,
									"name": "T",
									"package": "@modelence/react-query",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": 782,
									"name": "U",
									"package": "@modelence/react-query",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 783,
					"name": "createQueryKey",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 111,
							"character": 16,
							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/react-query/src/index.ts#L111"
						}
					],
					"signatures": [
						{
							"id": 784,
							"name": "createQueryKey",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Utility function to create query keys for manual cache operations"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Typed query key"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\nimport { useQueryClient } from '@tanstack/react-query';\nimport { createQueryKey } from '@modelence/react-query';\n\nfunction TodoActions() {\n  const queryClient = useQueryClient();\n  \n  const refreshTodos = () => {\n    queryClient.invalidateQueries({ \n      queryKey: createQueryKey('todo.getAll', { limit: 10 }) \n    });\n  };\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 111,
									"character": 16,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/react-query/src/index.ts#L111"
								}
							],
							"typeParameters": [
								{
									"id": 785,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 786,
									"name": "U",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@modelence/react-query",
											"packagePath": "src/index.ts",
											"qualifiedName": "Args"
										},
										"name": "Args",
										"package": "@modelence/react-query"
									},
									"default": {
										"type": "reference",
										"target": {
											"packageName": "@modelence/react-query",
											"packagePath": "src/index.ts",
											"qualifiedName": "Args"
										},
										"name": "Args",
										"package": "@modelence/react-query"
									}
								}
							],
							"parameters": [
								{
									"id": 787,
									"name": "methodName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The method name"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 785,
										"name": "T",
										"package": "@modelence/react-query",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 788,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The arguments"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 786,
										"name": "U",
										"package": "@modelence/react-query",
										"refersToTypeParameter": true
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"target": 780,
								"typeArguments": [
									{
										"type": "reference",
										"target": 785,
										"name": "T",
										"package": "@modelence/react-query",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 786,
										"name": "U",
										"package": "@modelence/react-query",
										"refersToTypeParameter": true
									}
								],
								"name": "ModelenceQueryKey",
								"package": "@modelence/react-query"
							}
						}
					]
				},
				{
					"id": 789,
					"name": "modelenceMutation",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 74,
							"character": 16,
							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/react-query/src/index.ts#L74"
						}
					],
					"signatures": [
						{
							"id": 790,
							"name": "modelenceMutation",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates mutation options for use with TanStack Query's useMutation hook."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Mutation options object for TanStack Query's useMutation"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { modelenceMutation } from '@modelence/react-query';\n\nfunction MyComponent() {\n  const queryClient = useQueryClient();\n  \n  // Basic usage\n  const { mutate } = useMutation(modelenceMutation('todos.create'));\n\n  // With additional options\n  const { mutate: updateTodo } = useMutation({\n    ...modelenceMutation('todos.update'),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['todos.getAll'] });\n    },\n  });\n\n  return <button onClick={() => mutate({ title: 'New Todo' })}>Create</button>;\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 74,
									"character": 16,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/react-query/src/index.ts#L74"
								}
							],
							"typeParameters": [
								{
									"id": 791,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The expected return type of the mutation"
											}
										]
									},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 792,
									"name": "methodName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the method to mutate"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 793,
									"name": "defaultArgs",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional default arguments to merge with mutation variables"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@modelence/react-query",
											"packagePath": "src/index.ts",
											"qualifiedName": "Args"
										},
										"name": "Args",
										"package": "@modelence/react-query"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 794,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 795,
											"name": "mutationFn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "index.ts",
													"line": 79,
													"character": 4,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/react-query/src/index.ts#L79"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 796,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "index.ts",
															"line": 79,
															"character": 16,
															"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/react-query/src/index.ts#L79"
														}
													],
													"signatures": [
														{
															"id": 797,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "index.ts",
																	"line": 79,
																	"character": 16,
																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/react-query/src/index.ts#L79"
																}
															],
															"parameters": [
																{
																	"id": 798,
																	"name": "variables",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "@modelence/react-query",
																			"packagePath": "src/index.ts",
																			"qualifiedName": "Args"
																		},
																		"name": "Args",
																		"package": "@modelence/react-query"
																	},
																	"defaultValue": "{}"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 791,
																		"name": "T",
																		"package": "@modelence/react-query",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												795
											]
										}
									],
									"sources": [
										{
											"fileName": "index.ts",
											"line": 78,
											"character": 9,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/react-query/src/index.ts#L78"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 799,
					"name": "modelenceQuery",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "index.ts",
							"line": 33,
							"character": 16,
							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/react-query/src/index.ts#L33"
						}
					],
					"signatures": [
						{
							"id": 800,
							"name": "modelenceQuery",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates query options for use with TanStack Query's useQuery hook."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Query options object for TanStack Query's useQuery"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\nimport { useQuery } from '@tanstack/react-query';\nimport { modelenceQuery } from '@modelence/react-query';\n\nfunction MyComponent() {\n  // Basic usage\n  const { data } = useQuery(modelenceQuery('todo.getAll'));\n\n  // With additional options\n  const { data: todo } = useQuery({\n    ...modelenceQuery('todo.getById', { id: '123' }),\n    enabled: !!id,\n    staleTime: 5 * 60 * 1000,\n  });\n\n  return <div>{data?.name}</div>;\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "index.ts",
									"line": 33,
									"character": 16,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/react-query/src/index.ts#L33"
								}
							],
							"typeParameters": [
								{
									"id": 801,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The expected return type of the query"
											}
										]
									},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 802,
									"name": "methodName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the method to query"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 803,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional arguments to pass to the method"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@modelence/react-query",
											"packagePath": "src/index.ts",
											"qualifiedName": "Args"
										},
										"name": "Args",
										"package": "@modelence/react-query"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 804,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 805,
											"name": "queryFn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "index.ts",
													"line": 39,
													"character": 4,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/react-query/src/index.ts#L39"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 806,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "index.ts",
															"line": 39,
															"character": 13,
															"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/react-query/src/index.ts#L39"
														}
													],
													"signatures": [
														{
															"id": 807,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "index.ts",
																	"line": 39,
																	"character": 13,
																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/react-query/src/index.ts#L39"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "typescript",
																	"packagePath": "lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 801,
																		"name": "T",
																		"package": "@modelence/react-query",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 808,
											"name": "queryKey",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "index.ts",
													"line": 38,
													"character": 4,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/react-query/src/index.ts#L38"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "reference",
															"target": {
																"packageName": "@modelence/react-query",
																"packagePath": "src/index.ts",
																"qualifiedName": "Args"
															},
															"name": "Args",
															"package": "@modelence/react-query"
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												805,
												808
											]
										}
									],
									"sources": [
										{
											"fileName": "index.ts",
											"line": 37,
											"character": 9,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/react-query/src/index.ts#L37"
										}
									]
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						780
					]
				},
				{
					"title": "Functions",
					"children": [
						783,
						789,
						799
					]
				}
			],
			"readme": [
				{
					"kind": "text",
					"text": "# @modelence/react-query\n\nReact Query utilities for Modelence method calls.\n\n## Installation\n\n"
				},
				{
					"kind": "code",
					"text": "```bash\nnpm i @modelence/react-query @tanstack/react-query\n```"
				},
				{
					"kind": "text",
					"text": "\n\n## Overview\n\nThis package provides "
				},
				{
					"kind": "code",
					"text": "`modelenceQuery`"
				},
				{
					"kind": "text",
					"text": " and "
				},
				{
					"kind": "code",
					"text": "`modelenceMutation`"
				},
				{
					"kind": "text",
					"text": " factory functions that can be used with TanStack Query's native "
				},
				{
					"kind": "code",
					"text": "`useQuery`"
				},
				{
					"kind": "text",
					"text": " and "
				},
				{
					"kind": "code",
					"text": "`useMutation`"
				},
				{
					"kind": "text",
					"text": " hooks. This approach, recommended by TanStack, gives you direct access to TanStack Query's full API while providing Modelence-specific query configurations.\n\n## Usage\n\n### Basic Query\n\n"
				},
				{
					"kind": "code",
					"text": "```tsx\nimport { useQuery } from '@tanstack/react-query';\nimport { modelenceQuery } from '@modelence/react-query';\n\nfunction TodoList() {\n  const { data, isPending, error } = useQuery(\n    modelenceQuery('todo.getAll', { limit: 10 })\n  );\n  \n  if (isPending) return <div>Loading...</div>;\n  if (error) return <div>Error: {error.message}</div>;\n  \n  return (\n    <div>\n      {data?.map(todo => (\n        <div key={todo.id}>{todo.title}</div>\n      ))}\n    </div>\n  );\n}\n```"
				},
				{
					"kind": "text",
					"text": "\n\n### Basic Mutation\n\n"
				},
				{
					"kind": "code",
					"text": "```tsx\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { modelenceMutation } from '@modelence/react-query';\n\nfunction CreateTodo() {\n  const queryClient = useQueryClient();\n  \n  const { mutate: createTodo, isPending } = useMutation({\n    ...modelenceMutation('todo.create'),\n    onSuccess: () => {\n      // Invalidate and refetch todos\n      queryClient.invalidateQueries({ queryKey: ['todo.getAll'] });\n    },\n  });\n  \n  return (\n    <button \n      onClick={() => createTodo({ title: 'New Todo', completed: false })}\n      disabled={isPending}\n    >\n      {isPending ? 'Creating...' : 'Create Todo'}\n    </button>\n  );\n}\n```"
				},
				{
					"kind": "text",
					"text": "\n\n### Advanced Usage\n\n#### Query with Additional Options\n\n"
				},
				{
					"kind": "code",
					"text": "```tsx\nimport { useQuery } from '@tanstack/react-query';\nimport { modelenceQuery } from '@modelence/react-query';\n\nfunction TodoDetail({ id }: { id: string }) {\n  const { data: todo } = useQuery({\n    ...modelenceQuery('todo.getById', { id }),\n    enabled: !!id, // Only run query if id exists\n    staleTime: 5 * 60 * 1000, // 5 minutes\n    refetchOnWindowFocus: false,\n  });\n  \n  return <div>{todo?.title}</div>;\n}\n```"
				},
				{
					"kind": "text",
					"text": "\n\n#### Mutation with Default Args\n\n"
				},
				{
					"kind": "code",
					"text": "```tsx\nimport { useMutation } from '@tanstack/react-query';\nimport { modelenceMutation } from '@modelence/react-query';\n\nfunction UpdateTodo({ todoId }: { todoId: string }) {\n  const { mutate: updateTodo } = useMutation({\n    ...modelenceMutation('todo.update', { id: todoId }), // Default args\n    onSuccess: (data) => {\n      console.log('Todo updated:', data);\n    },\n  });\n  \n  return (\n    <button onClick={() => updateTodo({ title: 'Updated Title' })}>\n      Update Todo\n    </button>\n  );\n}\n```"
				},
				{
					"kind": "text",
					"text": "\n\n#### Manual Cache Operations\n\n"
				},
				{
					"kind": "code",
					"text": "```tsx\nimport { useQueryClient } from '@tanstack/react-query';\nimport { createQueryKey, modelenceQuery } from '@modelence/react-query';\n\nfunction TodoActions() {\n  const queryClient = useQueryClient();\n  \n  const refreshTodos = () => {\n    queryClient.invalidateQueries({ \n      queryKey: createQueryKey('todo.getAll', { limit: 10 }) \n    });\n  };\n  \n  const prefetchTodo = (id: string) => {\n    queryClient.prefetchQuery({\n      ...modelenceQuery('todo.getById', { id }),\n      staleTime: 10 * 60 * 1000, // 10 minutes\n    });\n  };\n  \n  return (\n    <div>\n      <button onClick={refreshTodos}>Refresh Todos</button>\n      <button onClick={() => prefetchTodo('123')}>Prefetch Todo</button>\n    </div>\n  );\n}\n```"
				},
				{
					"kind": "text",
					"text": "\n\n## API Reference\n\n### "
				},
				{
					"kind": "code",
					"text": "`modelenceQuery<T>(methodName, args?)`"
				},
				{
					"kind": "text",
					"text": "\n\nCreates a query configuration object for use with TanStack Query's "
				},
				{
					"kind": "code",
					"text": "`useQuery`"
				},
				{
					"kind": "text",
					"text": ".\n\n**Parameters:**\n- "
				},
				{
					"kind": "code",
					"text": "`methodName`"
				},
				{
					"kind": "text",
					"text": " (string): The Modelence method name (e.g., 'todo.getAll')\n- "
				},
				{
					"kind": "code",
					"text": "`args`"
				},
				{
					"kind": "text",
					"text": " (object, optional): Arguments to pass to the method\n\n**Returns:** Query configuration object with "
				},
				{
					"kind": "code",
					"text": "`queryKey`"
				},
				{
					"kind": "text",
					"text": " and "
				},
				{
					"kind": "code",
					"text": "`queryFn`"
				},
				{
					"kind": "text",
					"text": "\n\n### "
				},
				{
					"kind": "code",
					"text": "`modelenceMutation<T, TVariables>(methodName, defaultArgs?)`"
				},
				{
					"kind": "text",
					"text": "\n\nCreates a mutation configuration object for use with TanStack Query's "
				},
				{
					"kind": "code",
					"text": "`useMutation`"
				},
				{
					"kind": "text",
					"text": ".\n\n**Parameters:**\n- "
				},
				{
					"kind": "code",
					"text": "`methodName`"
				},
				{
					"kind": "text",
					"text": " (string): The Modelence method name (e.g., 'todo.create')\n- "
				},
				{
					"kind": "code",
					"text": "`defaultArgs`"
				},
				{
					"kind": "text",
					"text": " (object, optional): Default arguments merged with mutation variables\n\n**Returns:** Mutation configuration object with "
				},
				{
					"kind": "code",
					"text": "`mutationFn`"
				},
				{
					"kind": "text",
					"text": "\n\n### "
				},
				{
					"kind": "code",
					"text": "`createQueryKey<T, U>(methodName, args?)`"
				},
				{
					"kind": "text",
					"text": "\n\nUtility function to create typed query keys for manual cache operations.\n\n**Parameters:**\n- "
				},
				{
					"kind": "code",
					"text": "`methodName`"
				},
				{
					"kind": "text",
					"text": " (T): The method name\n- "
				},
				{
					"kind": "code",
					"text": "`args`"
				},
				{
					"kind": "text",
					"text": " (U, optional): The arguments\n\n**Returns:** Typed query key array\n\n## Benefits\n\n1. **Full TanStack Query API**: Access to all TanStack Query features and options\n2. **Simple and Explicit**: Clear separation between Modelence configuration and TanStack Query options\n3. **Better TypeScript Support**: Improved type inference and safety\n4. **Familiar API**: Standard TanStack Query patterns that developers already know\n5. **Future-Proof**: Easy to adopt new TanStack Query features as they're released\n6. **Composability**: Easy to combine with other TanStack Query utilities"
				}
			]
		},
		{
			"id": 431,
			"name": "modelence",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 432,
					"name": "client",
					"variant": "declaration",
					"kind": 2,
					"flags": {},
					"children": [
						{
							"id": 433,
							"name": "MethodArgs",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"sources": [
								{
									"fileName": "src/client/method.ts",
									"line": 14,
									"character": 12,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/client/method.ts#L14"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"packageName": "typescript",
									"packagePath": "lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 434,
							"name": "UserInfo",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"children": [
								{
									"id": 435,
									"name": "handle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "src/auth/client/index.ts",
											"line": 6,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/client/index.ts#L6"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 436,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "src/auth/client/index.ts",
											"line": 5,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/client/index.ts#L5"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										435,
										436
									]
								}
							],
							"sources": [
								{
									"fileName": "src/auth/client/index.ts",
									"line": 4,
									"character": 12,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/client/index.ts#L4"
								}
							]
						},
						{
							"id": 437,
							"name": "AppProvider",
							"variant": "declaration",
							"kind": 32,
							"flags": {
								"isConst": true
							},
							"sources": [
								{
									"fileName": "src/client.ts",
									"line": 7,
									"character": 13,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/client.ts#L7"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"defaultValue": "..."
						},
						{
							"id": 438,
							"name": "callMethod",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "src/client/method.ts",
									"line": 16,
									"character": 22,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/client/method.ts#L16"
								}
							],
							"signatures": [
								{
									"id": 439,
									"name": "callMethod",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/client/method.ts",
											"line": 16,
											"character": 22,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/client/method.ts#L16"
										}
									],
									"typeParameters": [
										{
											"id": 440,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 441,
											"name": "methodName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 442,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 433,
												"name": "MethodArgs",
												"package": "modelence"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 440,
												"name": "T",
												"package": "modelence",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 443,
							"name": "getConfig",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/client.ts",
									"line": 5,
									"character": 16,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/config/client.ts#L5"
								}
							],
							"signatures": [
								{
									"id": 444,
									"name": "getConfig",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/config/client.ts",
											"line": 5,
											"character": 16,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/config/client.ts#L5"
										}
									],
									"parameters": [
										{
											"id": 445,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							]
						},
						{
							"id": 446,
							"name": "loginWithPassword",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "src/auth/client/index.ts",
									"line": 16,
									"character": 22,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/client/index.ts#L16"
								}
							],
							"signatures": [
								{
									"id": 447,
									"name": "loginWithPassword",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/auth/client/index.ts",
											"line": 16,
											"character": 22,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/client/index.ts#L16"
										}
									],
									"parameters": [
										{
											"id": 448,
											"name": "__namedParameters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 449,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 450,
															"name": "email",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/auth/client/index.ts",
																	"line": 16,
																	"character": 63,
																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/client/index.ts#L16"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 451,
															"name": "password",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/auth/client/index.ts",
																	"line": 16,
																	"character": 78,
																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/client/index.ts#L16"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																450,
																451
															]
														}
													],
													"sources": [
														{
															"fileName": "src/auth/client/index.ts",
															"line": 16,
															"character": 61,
															"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/client/index.ts#L16"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 434,
												"name": "UserInfo",
												"package": "modelence"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 452,
							"name": "logout",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "src/auth/client/index.ts",
									"line": 22,
									"character": 22,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/client/index.ts#L22"
								}
							],
							"signatures": [
								{
									"id": 453,
									"name": "logout",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/auth/client/index.ts",
											"line": 22,
											"character": 22,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/client/index.ts#L22"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 454,
							"name": "renderApp",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "src/client/renderApp.tsx",
									"line": 6,
									"character": 16,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/client/renderApp.tsx#L6"
								}
							],
							"signatures": [
								{
									"id": 455,
									"name": "renderApp",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/client/renderApp.tsx",
											"line": 6,
											"character": 16,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/client/renderApp.tsx#L6"
										}
									],
									"parameters": [
										{
											"id": 456,
											"name": "__namedParameters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 457,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 458,
															"name": "errorHandler",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "src/client/renderApp.tsx",
																	"line": 10,
																	"character": 2,
																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/client/renderApp.tsx#L10"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "modelence",
																	"packagePath": "src/client/errorHandler.ts",
																	"qualifiedName": "ErrorHandler"
																},
																"name": "ErrorHandler",
																"package": "modelence"
															}
														},
														{
															"id": 459,
															"name": "favicon",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "src/client/renderApp.tsx",
																	"line": 9,
																	"character": 2,
																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/client/renderApp.tsx#L9"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 460,
															"name": "loadingElement",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/client/renderApp.tsx",
																	"line": 7,
																	"character": 2,
																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/client/renderApp.tsx#L7"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "@types/react",
																	"packagePath": "index.d.ts",
																	"qualifiedName": "React.ReactNode"
																},
																"name": "ReactNode",
																"package": "@types/react",
																"qualifiedName": "React.ReactNode"
															}
														},
														{
															"id": 461,
															"name": "routesElement",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/client/renderApp.tsx",
																	"line": 8,
																	"character": 2,
																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/client/renderApp.tsx#L8"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "@types/react",
																	"packagePath": "index.d.ts",
																	"qualifiedName": "React.ReactNode"
																},
																"name": "ReactNode",
																"package": "@types/react",
																"qualifiedName": "React.ReactNode"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																458,
																459,
																460,
																461
															]
														}
													],
													"sources": [
														{
															"fileName": "src/client/renderApp.tsx",
															"line": 6,
															"character": 84,
															"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/client/renderApp.tsx#L6"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 462,
							"name": "signupWithPassword",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "src/auth/client/index.ts",
									"line": 9,
									"character": 22,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/client/index.ts#L9"
								}
							],
							"signatures": [
								{
									"id": 463,
									"name": "signupWithPassword",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/auth/client/index.ts",
											"line": 9,
											"character": 22,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/client/index.ts#L9"
										}
									],
									"parameters": [
										{
											"id": 464,
											"name": "__namedParameters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 465,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 466,
															"name": "email",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/auth/client/index.ts",
																	"line": 9,
																	"character": 64,
																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/client/index.ts#L9"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 467,
															"name": "password",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/auth/client/index.ts",
																	"line": 9,
																	"character": 79,
																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/client/index.ts#L9"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																466,
																467
															]
														}
													],
													"sources": [
														{
															"fileName": "src/auth/client/index.ts",
															"line": 9,
															"character": 62,
															"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/client/index.ts#L9"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 468,
							"name": "useSession",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "src/client/session.ts",
									"line": 57,
									"character": 16,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/client/session.ts#L57"
								}
							],
							"signatures": [
								{
									"id": 469,
									"name": "useSession",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/client/session.ts",
											"line": 57,
											"character": 16,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/client/session.ts#L57"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 470,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 471,
													"name": "user",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/client/session.ts",
															"line": 59,
															"character": 11,
															"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/client/session.ts#L59"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"packageName": "modelence",
																	"packagePath": "src/client/session.ts",
																	"qualifiedName": "User"
																},
																"name": "User",
																"package": "modelence"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														471
													]
												}
											],
											"sources": [
												{
													"fileName": "src/client/session.ts",
													"line": 59,
													"character": 9,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/client/session.ts#L59"
												}
											]
										}
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Type Aliases",
							"children": [
								433,
								434
							]
						},
						{
							"title": "Variables",
							"children": [
								437
							]
						},
						{
							"title": "Functions",
							"children": [
								438,
								443,
								446,
								452,
								454,
								462,
								468
							]
						}
					],
					"sources": [
						{
							"fileName": "src/client.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/client.ts#L1"
						}
					]
				},
				{
					"id": 472,
					"name": "server",
					"variant": "declaration",
					"kind": 2,
					"flags": {},
					"children": [
						{
							"id": 473,
							"name": "schema",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 474,
									"name": "infer",
									"variant": "declaration",
									"kind": 2097152,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/types.ts",
											"line": 65,
											"character": 14,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L65"
										}
									],
									"typeParameters": [
										{
											"id": 475,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "modelence",
													"packagePath": "src/data/types.ts",
													"qualifiedName": "SchemaTypeDefinition"
												},
												"name": "SchemaTypeDefinition",
												"package": "modelence"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "modelence",
											"packagePath": "src/data/types.ts",
											"qualifiedName": "InferDocumentType"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 475,
												"name": "T",
												"package": "modelence",
												"refersToTypeParameter": true
											}
										],
										"name": "InferDocumentType",
										"package": "modelence"
									}
								}
							],
							"groups": [
								{
									"title": "Type Aliases",
									"children": [
										474
									]
								}
							],
							"sources": [
								{
									"fileName": "src/data/types.ts",
									"line": 31,
									"character": 13,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L31"
								},
								{
									"fileName": "src/data/types.ts",
									"line": 64,
									"character": 17,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L64"
								}
							]
						},
						{
							"id": 476,
							"name": "Module",
							"variant": "declaration",
							"kind": 128,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Module class is a core building block of a Modelence application that encapsulates related functionality.\nModules can contain stores, queries, mutations, routes, cron jobs and configurations."
									}
								],
								"blockTags": [
									{
										"tag": "@category",
										"content": [
											{
												"kind": "text",
												"text": "Module"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst todoModule = new Module('todo', {\n  stores: [dbTodos],\n  queries: {\n    async getAll() {\n      // Fetch and return all Todo items\n    }\n  },\n  mutations: {\n    async create({ title }, { user }) {\n      // Create a new Todo item\n    }\n  }\n});\n```"
											}
										]
									}
								]
							},
							"children": [
								{
									"id": 477,
									"name": "constructor",
									"variant": "declaration",
									"kind": 512,
									"flags": {},
									"sources": [
										{
											"fileName": "src/app/module.ts",
											"line": 70,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/app/module.ts#L70"
										}
									],
									"signatures": [
										{
											"id": 478,
											"name": "Module",
											"variant": "signature",
											"kind": 16384,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Creates a new Module instance"
													}
												]
											},
											"sources": [
												{
													"fileName": "src/app/module.ts",
													"line": 70,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/app/module.ts#L70"
												}
											],
											"parameters": [
												{
													"id": 479,
													"name": "name",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The unique name of the module.\nThis name is used to namespace queries, mutations,\ncron jobs and configuration values with a prefix (e.g. \"todo.create\")"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 480,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Module configuration options"
															}
														]
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 481,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 482,
																	"name": "configSchema",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "src/app/module.ts",
																			"line": 85,
																			"character": 6,
																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/app/module.ts#L85"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "modelence",
																			"packagePath": "src/config/types.ts",
																			"qualifiedName": "ConfigSchema"
																		},
																		"name": "ConfigSchema",
																		"package": "modelence"
																	},
																	"defaultValue": "{}"
																},
																{
																	"id": 483,
																	"name": "cronJobs",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "src/app/module.ts",
																			"line": 84,
																			"character": 6,
																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/app/module.ts#L84"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "typescript",
																			"packagePath": "lib/lib.es5.d.ts",
																			"qualifiedName": "Record"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"packageName": "modelence",
																					"packagePath": "src/cron/types.ts",
																					"qualifiedName": "CronJobInputParams"
																				},
																				"name": "CronJobInputParams",
																				"package": "modelence"
																			}
																		],
																		"name": "Record",
																		"package": "typescript"
																	},
																	"defaultValue": "{}"
																},
																{
																	"id": 484,
																	"name": "mutations",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "src/app/module.ts",
																			"line": 82,
																			"character": 6,
																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/app/module.ts#L82"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "modelence",
																			"packagePath": "src/app/module.ts",
																			"qualifiedName": "Mutations"
																		},
																		"name": "Mutations",
																		"package": "modelence"
																	},
																	"defaultValue": "{}"
																},
																{
																	"id": 485,
																	"name": "queries",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "src/app/module.ts",
																			"line": 81,
																			"character": 6,
																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/app/module.ts#L81"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "modelence",
																			"packagePath": "src/app/module.ts",
																			"qualifiedName": "Queries"
																		},
																		"name": "Queries",
																		"package": "modelence"
																	},
																	"defaultValue": "{}"
																},
																{
																	"id": 486,
																	"name": "routes",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "src/app/module.ts",
																			"line": 83,
																			"character": 6,
																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/app/module.ts#L83"
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": 597,
																			"name": "RouteDefinition",
																			"package": "modelence"
																		}
																	},
																	"defaultValue": "[]"
																},
																{
																	"id": 487,
																	"name": "stores",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "src/app/module.ts",
																			"line": 80,
																			"character": 6,
																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/app/module.ts#L80"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "modelence",
																			"packagePath": "src/app/module.ts",
																			"qualifiedName": "Stores"
																		},
																		"name": "Stores",
																		"package": "modelence"
																	},
																	"defaultValue": "[]"
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		482,
																		483,
																		484,
																		485,
																		486,
																		487
																	]
																}
															],
															"sources": [
																{
																	"fileName": "src/app/module.ts",
																	"line": 79,
																	"character": 7,
																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/app/module.ts#L79"
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 476,
												"name": "Module",
												"package": "modelence"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"children": [
										477
									]
								}
							],
							"sources": [
								{
									"fileName": "src/app/module.ts",
									"line": 39,
									"character": 13,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/app/module.ts#L39"
								}
							]
						},
						{
							"id": 488,
							"name": "Store",
							"variant": "declaration",
							"kind": 128,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Store class provides a type-safe interface for MongoDB collections with built-in schema validation and helper methods."
									}
								],
								"blockTags": [
									{
										"tag": "@category",
										"content": [
											{
												"kind": "text",
												"text": "Store"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst dbTodos = new Store('todos', {\n  schema: {\n    title: schema.string(),\n    completed: schema.boolean(),\n    dueDate: schema.date().optional(),\n    userId: schema.userId(),\n  },\n  methods: {\n    isOverdue() {\n      return this.dueDate < new Date();\n    }\n  }\n});\n```"
											}
										]
									}
								]
							},
							"children": [
								{
									"id": 489,
									"name": "constructor",
									"variant": "declaration",
									"kind": 512,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 76,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L76"
										}
									],
									"signatures": [
										{
											"id": 490,
											"name": "Store",
											"variant": "signature",
											"kind": 16384,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Creates a new Store instance"
													}
												]
											},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 76,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L76"
												}
											],
											"typeParameters": [
												{
													"id": 491,
													"name": "TSchema",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "modelence",
															"packagePath": "src/data/types.ts",
															"qualifiedName": "ModelSchema"
														},
														"name": "ModelSchema",
														"package": "modelence"
													}
												},
												{
													"id": 492,
													"name": "TMethods",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 493,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/data/store.ts",
																			"line": 52,
																			"character": 34,
																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L52"
																		}
																	],
																	"signatures": [
																		{
																			"id": 494,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/data/store.ts",
																					"line": 52,
																					"character": 34,
																					"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L52"
																				}
																			],
																			"parameters": [
																				{
																					"id": 495,
																					"name": "this",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intersection",
																						"types": [
																							{
																								"type": "reference",
																								"target": {
																									"packageName": "mongodb",
																									"packagePath": "mongodb.d.ts",
																									"qualifiedName": "EnhancedOmit"
																								},
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": {
																											"packageName": "modelence",
																											"packagePath": "src/data/types.ts",
																											"qualifiedName": "InferDocumentType"
																										},
																										"typeArguments": [
																											{
																												"type": "reference",
																												"target": 491,
																												"name": "TSchema",
																												"package": "modelence",
																												"qualifiedName": "Store.TSchema",
																												"refersToTypeParameter": true
																											}
																										],
																										"name": "InferDocumentType",
																										"package": "modelence"
																									},
																									{
																										"type": "literal",
																										"value": "_id"
																									}
																								],
																								"name": "EnhancedOmit",
																								"package": "mongodb"
																							},
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 496,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"sources": [
																										{
																											"fileName": "node_modules/mongodb/mongodb.d.ts",
																											"line": 8786,
																											"character": 69
																										}
																									]
																								}
																							},
																							{
																								"type": "reference",
																								"target": 492,
																								"name": "TMethods",
																								"package": "modelence",
																								"qualifiedName": "Store.TMethods",
																								"refersToTypeParameter": true
																							}
																						]
																					}
																				},
																				{
																					"id": 497,
																					"name": "args",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {
																						"isRest": true
																					},
																					"type": {
																						"type": "array",
																						"elementType": {
																							"type": "intrinsic",
																							"name": "unknown"
																						}
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		}
																	]
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"parameters": [
												{
													"id": 498,
													"name": "name",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The collection name in MongoDB"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 499,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Store configuration"
															}
														]
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 500,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 501,
																	"name": "indexes",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "MongoDB indexes to create"
																			}
																		]
																	},
																	"sources": [
																		{
																			"fileName": "src/data/store.ts",
																			"line": 84,
																			"character": 6,
																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L84"
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "reference",
																			"target": {
																				"packageName": "mongodb",
																				"packagePath": "mongodb.d.ts",
																				"qualifiedName": "IndexDescription"
																			},
																			"name": "IndexDescription",
																			"package": "mongodb"
																		}
																	}
																},
																{
																	"id": 502,
																	"name": "methods",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Custom methods to add to documents"
																			}
																		]
																	},
																	"sources": [
																		{
																			"fileName": "src/data/store.ts",
																			"line": 82,
																			"character": 6,
																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L82"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 492,
																		"name": "TMethods",
																		"package": "modelence",
																		"qualifiedName": "Store.TMethods",
																		"refersToTypeParameter": true
																	}
																},
																{
																	"id": 503,
																	"name": "schema",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Document schema using Modelence schema types"
																			}
																		]
																	},
																	"sources": [
																		{
																			"fileName": "src/data/store.ts",
																			"line": 80,
																			"character": 6,
																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L80"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 491,
																		"name": "TSchema",
																		"package": "modelence",
																		"qualifiedName": "Store.TSchema",
																		"refersToTypeParameter": true
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		501,
																		502,
																		503
																	]
																}
															],
															"sources": [
																{
																	"fileName": "src/data/store.ts",
																	"line": 78,
																	"character": 13,
																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L78"
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 488,
												"typeArguments": [
													{
														"type": "reference",
														"target": 491,
														"name": "TSchema",
														"package": "modelence",
														"qualifiedName": "Store.TSchema",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 492,
														"name": "TMethods",
														"package": "modelence",
														"qualifiedName": "Store.TMethods",
														"refersToTypeParameter": true
													}
												],
												"name": "Store",
												"package": "modelence"
											}
										}
									]
								},
								{
									"id": 504,
									"name": "Doc",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isReadonly": true
									},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 61,
											"character": 11,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L61"
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"packageName": "mongodb",
													"packagePath": "mongodb.d.ts",
													"qualifiedName": "EnhancedOmit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "modelence",
															"packagePath": "src/data/types.ts",
															"qualifiedName": "InferDocumentType"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 491,
																"name": "TSchema",
																"package": "modelence",
																"qualifiedName": "Store.TSchema",
																"refersToTypeParameter": true
															}
														],
														"name": "InferDocumentType",
														"package": "modelence"
													},
													{
														"type": "literal",
														"value": "_id"
													}
												],
												"name": "EnhancedOmit",
												"package": "mongodb"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 505,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/mongodb/mongodb.d.ts",
															"line": 8786,
															"character": 69
														}
													]
												}
											},
											{
												"type": "reference",
												"target": 492,
												"name": "TMethods",
												"package": "modelence",
												"qualifiedName": "Store.TMethods",
												"refersToTypeParameter": true
											}
										]
									}
								},
								{
									"id": 506,
									"name": "aggregate",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 324,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L324"
										}
									],
									"signatures": [
										{
											"id": 507,
											"name": "aggregate",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Aggregates documents using MongoDB's aggregation framework"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "The aggregation cursor"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 324,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L324"
												}
											],
											"parameters": [
												{
													"id": 508,
													"name": "pipeline",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The aggregation pipeline"
															}
														]
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"packageName": "bson",
																"packagePath": "bson.d.ts",
																"qualifiedName": "Document"
															},
															"name": "Document",
															"package": "bson"
														}
													}
												},
												{
													"id": 509,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Optional options"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "AggregateOptions"
														},
														"name": "AggregateOptions",
														"package": "mongodb"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "mongodb",
													"packagePath": "mongodb.d.ts",
													"qualifiedName": "AggregationCursor"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "bson",
															"packagePath": "bson.d.ts",
															"qualifiedName": "Document"
														},
														"name": "Document",
														"package": "bson"
													}
												],
												"name": "AggregationCursor",
												"package": "mongodb"
											}
										}
									]
								},
								{
									"id": 510,
									"name": "bulkWrite",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 334,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L334"
										}
									],
									"signatures": [
										{
											"id": 511,
											"name": "bulkWrite",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Performs a bulk write operation on the collection"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "The result of the bulk write operation"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 334,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L334"
												}
											],
											"parameters": [
												{
													"id": 512,
													"name": "operations",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The operations to perform"
															}
														]
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"packageName": "mongodb",
																"packagePath": "mongodb.d.ts",
																"qualifiedName": "AnyBulkWriteOperation"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"packageName": "modelence",
																		"packagePath": "src/data/types.ts",
																		"qualifiedName": "InferDocumentType"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 491,
																			"name": "TSchema",
																			"package": "modelence",
																			"qualifiedName": "Store.TSchema",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "InferDocumentType",
																	"package": "modelence"
																}
															],
															"name": "AnyBulkWriteOperation",
															"package": "mongodb"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "BulkWriteResult"
														},
														"name": "BulkWriteResult",
														"package": "mongodb"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 513,
									"name": "deleteMany",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 313,
											"character": 8,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L313"
										}
									],
									"signatures": [
										{
											"id": 514,
											"name": "deleteMany",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Deletes multiple documents"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "The result of the delete operation"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 313,
													"character": 8,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L313"
												}
											],
											"parameters": [
												{
													"id": 515,
													"name": "selector",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The selector to find the documents to delete"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "Filter"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "modelence",
																	"packagePath": "src/data/types.ts",
																	"qualifiedName": "InferDocumentType"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 491,
																		"name": "TSchema",
																		"package": "modelence",
																		"qualifiedName": "Store.TSchema",
																		"refersToTypeParameter": true
																	}
																],
																"name": "InferDocumentType",
																"package": "modelence"
															}
														],
														"name": "Filter",
														"package": "mongodb"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "DeleteResult"
														},
														"name": "DeleteResult",
														"package": "mongodb"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 516,
									"name": "deleteOne",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 303,
											"character": 8,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L303"
										}
									],
									"signatures": [
										{
											"id": 517,
											"name": "deleteOne",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Deletes a single document"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "The result of the delete operation"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 303,
													"character": 8,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L303"
												}
											],
											"parameters": [
												{
													"id": 518,
													"name": "selector",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The selector to find the document to delete"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "Filter"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "modelence",
																	"packagePath": "src/data/types.ts",
																	"qualifiedName": "InferDocumentType"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 491,
																		"name": "TSchema",
																		"package": "modelence",
																		"qualifiedName": "Store.TSchema",
																		"refersToTypeParameter": true
																	}
																],
																"name": "InferDocumentType",
																"package": "modelence"
															}
														],
														"name": "Filter",
														"package": "mongodb"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "DeleteResult"
														},
														"name": "DeleteResult",
														"package": "mongodb"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 519,
									"name": "fetch",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 221,
											"character": 8,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L221"
										}
									],
									"signatures": [
										{
											"id": 520,
											"name": "fetch",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Fetches multiple documents, equivalent to Node.js MongoDB driver's "
													},
													{
														"kind": "code",
														"text": "`find`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`toArray`"
													},
													{
														"kind": "text",
														"text": " methods combined."
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "The documents"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 221,
													"character": 8,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L221"
												}
											],
											"parameters": [
												{
													"id": 521,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The query to filter documents"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "Filter"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "modelence",
																	"packagePath": "src/data/types.ts",
																	"qualifiedName": "InferDocumentType"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 491,
																		"name": "TSchema",
																		"package": "modelence",
																		"qualifiedName": "Store.TSchema",
																		"refersToTypeParameter": true
																	}
																],
																"name": "InferDocumentType",
																"package": "modelence"
															}
														],
														"name": "Filter",
														"package": "mongodb"
													}
												},
												{
													"id": 522,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Optional options"
															}
														]
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 523,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 524,
																	"name": "limit",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "src/data/store.ts",
																			"line": 221,
																			"character": 73,
																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L221"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 525,
																	"name": "skip",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "src/data/store.ts",
																			"line": 221,
																			"character": 89,
																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L221"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 526,
																	"name": "sort",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "src/data/store.ts",
																			"line": 221,
																			"character": 56,
																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L221"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "bson",
																			"packagePath": "bson.d.ts",
																			"qualifiedName": "Document"
																		},
																		"name": "Document",
																		"package": "bson"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		524,
																		525,
																		526
																	]
																}
															],
															"sources": [
																{
																	"fileName": "src/data/store.ts",
																	"line": 221,
																	"character": 54,
																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L221"
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "intersection",
															"types": [
																{
																	"type": "reference",
																	"target": {
																		"packageName": "mongodb",
																		"packagePath": "mongodb.d.ts",
																		"qualifiedName": "EnhancedOmit"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": {
																				"packageName": "modelence",
																				"packagePath": "src/data/types.ts",
																				"qualifiedName": "InferDocumentType"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": 491,
																					"name": "TSchema",
																					"package": "modelence",
																					"qualifiedName": "Store.TSchema",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "InferDocumentType",
																			"package": "modelence"
																		},
																		{
																			"type": "literal",
																			"value": "_id"
																		}
																	],
																	"name": "EnhancedOmit",
																	"package": "mongodb"
																},
																{
																	"type": "reflection",
																	"declaration": {
																		"id": 527,
																		"name": "__type",
																		"variant": "declaration",
																		"kind": 65536,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "node_modules/mongodb/mongodb.d.ts",
																				"line": 8786,
																				"character": 69
																			}
																		]
																	}
																},
																{
																	"type": "reference",
																	"target": 492,
																	"name": "TMethods",
																	"package": "modelence",
																	"qualifiedName": "Store.TMethods",
																	"refersToTypeParameter": true
																}
															]
														}
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 528,
									"name": "findById",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 194,
											"character": 8,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L194"
										}
									],
									"signatures": [
										{
											"id": 529,
											"name": "findById",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Fetches a single document by its ID"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "The document, or null if not found"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 194,
													"character": 8,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L194"
												}
											],
											"parameters": [
												{
													"id": 530,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the document to find"
															}
														]
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"target": {
																	"packageName": "bson",
																	"packagePath": "bson.d.ts",
																	"qualifiedName": "ObjectId"
																},
																"name": "ObjectId",
																"package": "bson"
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "mongodb",
																			"packagePath": "mongodb.d.ts",
																			"qualifiedName": "EnhancedOmit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"packageName": "modelence",
																					"packagePath": "src/data/types.ts",
																					"qualifiedName": "InferDocumentType"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 491,
																						"name": "TSchema",
																						"package": "modelence",
																						"qualifiedName": "Store.TSchema",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "InferDocumentType",
																				"package": "modelence"
																			},
																			{
																				"type": "literal",
																				"value": "_id"
																			}
																		],
																		"name": "EnhancedOmit",
																		"package": "mongodb"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 531,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "node_modules/mongodb/mongodb.d.ts",
																					"line": 8786,
																					"character": 69
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": 492,
																		"name": "TMethods",
																		"package": "modelence",
																		"qualifiedName": "Store.TMethods",
																		"refersToTypeParameter": true
																	}
																]
															}
														]
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 532,
									"name": "findOne",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 153,
											"character": 8,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L153"
										}
									],
									"signatures": [
										{
											"id": 533,
											"name": "findOne",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 153,
													"character": 8,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L153"
												}
											],
											"parameters": [
												{
													"id": 534,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "Filter"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "modelence",
																	"packagePath": "src/data/types.ts",
																	"qualifiedName": "InferDocumentType"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 491,
																		"name": "TSchema",
																		"package": "modelence",
																		"qualifiedName": "Store.TSchema",
																		"refersToTypeParameter": true
																	}
																],
																"name": "InferDocumentType",
																"package": "modelence"
															}
														],
														"name": "Filter",
														"package": "mongodb"
													}
												},
												{
													"id": 535,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "FindOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "bson",
																	"packagePath": "bson.d.ts",
																	"qualifiedName": "Document"
																},
																"name": "Document",
																"package": "bson"
															}
														],
														"name": "FindOptions",
														"package": "mongodb"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "mongodb",
																			"packagePath": "mongodb.d.ts",
																			"qualifiedName": "EnhancedOmit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"packageName": "modelence",
																					"packagePath": "src/data/types.ts",
																					"qualifiedName": "InferDocumentType"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 491,
																						"name": "TSchema",
																						"package": "modelence",
																						"qualifiedName": "Store.TSchema",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "InferDocumentType",
																				"package": "modelence"
																			},
																			{
																				"type": "literal",
																				"value": "_id"
																			}
																		],
																		"name": "EnhancedOmit",
																		"package": "mongodb"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 536,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "node_modules/mongodb/mongodb.d.ts",
																					"line": 8786,
																					"character": 69
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": 492,
																		"name": "TMethods",
																		"package": "modelence",
																		"qualifiedName": "Store.TMethods",
																		"refersToTypeParameter": true
																	}
																]
															}
														]
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 537,
									"name": "getDatabase",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 343,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L343"
										}
									],
									"signatures": [
										{
											"id": 538,
											"name": "getDatabase",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Returns the raw MongoDB database instance for advanced operations"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "The MongoDB database instance"
															}
														]
													},
													{
														"tag": "@throws",
														"content": [
															{
																"kind": "text",
																"text": "Error if the store is not provisioned"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 343,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L343"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "mongodb",
													"packagePath": "mongodb.d.ts",
													"qualifiedName": "Db"
												},
												"name": "Db",
												"package": "mongodb"
											}
										}
									]
								},
								{
									"id": 539,
									"name": "getName",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 93,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L93"
										}
									],
									"signatures": [
										{
											"id": 540,
											"name": "getName",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 93,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L93"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 541,
									"name": "insertMany",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 242,
											"character": 8,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L242"
										}
									],
									"signatures": [
										{
											"id": 542,
											"name": "insertMany",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Inserts multiple documents"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "The result of the insert operation"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 242,
													"character": 8,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L242"
												}
											],
											"parameters": [
												{
													"id": 543,
													"name": "documents",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The documents to insert"
															}
														]
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"packageName": "mongodb",
																"packagePath": "mongodb.d.ts",
																"qualifiedName": "OptionalUnlessRequiredId"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"packageName": "modelence",
																		"packagePath": "src/data/types.ts",
																		"qualifiedName": "InferDocumentType"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 491,
																			"name": "TSchema",
																			"package": "modelence",
																			"qualifiedName": "Store.TSchema",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "InferDocumentType",
																	"package": "modelence"
																}
															],
															"name": "OptionalUnlessRequiredId",
															"package": "mongodb"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "InsertManyResult"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "bson",
																	"packagePath": "bson.d.ts",
																	"qualifiedName": "Document"
																},
																"name": "Document",
																"package": "bson"
															}
														],
														"name": "InsertManyResult",
														"package": "mongodb"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 544,
									"name": "insertOne",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 232,
											"character": 8,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L232"
										}
									],
									"signatures": [
										{
											"id": 545,
											"name": "insertOne",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Inserts a single document"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "The result of the insert operation"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 232,
													"character": 8,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L232"
												}
											],
											"parameters": [
												{
													"id": 546,
													"name": "document",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The document to insert"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "OptionalUnlessRequiredId"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "modelence",
																	"packagePath": "src/data/types.ts",
																	"qualifiedName": "InferDocumentType"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 491,
																		"name": "TSchema",
																		"package": "modelence",
																		"qualifiedName": "Store.TSchema",
																		"refersToTypeParameter": true
																	}
																],
																"name": "InferDocumentType",
																"package": "modelence"
															}
														],
														"name": "OptionalUnlessRequiredId",
														"package": "mongodb"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "InsertOneResult"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "bson",
																	"packagePath": "bson.d.ts",
																	"qualifiedName": "Document"
																},
																"name": "Document",
																"package": "bson"
															}
														],
														"name": "InsertOneResult",
														"package": "mongodb"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 547,
									"name": "rawCollection",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 352,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L352"
										}
									],
									"signatures": [
										{
											"id": 548,
											"name": "rawCollection",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Returns the raw MongoDB collection instance for advanced operations"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "The MongoDB collection instance"
															}
														]
													},
													{
														"tag": "@throws",
														"content": [
															{
																"kind": "text",
																"text": "Error if the store is not provisioned"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 352,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L352"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "mongodb",
													"packagePath": "mongodb.d.ts",
													"qualifiedName": "Collection"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "modelence",
															"packagePath": "src/data/types.ts",
															"qualifiedName": "InferDocumentType"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 491,
																"name": "TSchema",
																"package": "modelence",
																"qualifiedName": "Store.TSchema",
																"refersToTypeParameter": true
															}
														],
														"name": "InferDocumentType",
														"package": "modelence"
													}
												],
												"name": "Collection",
												"package": "mongodb"
											}
										}
									]
								},
								{
									"id": 549,
									"name": "renameFrom",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 361,
											"character": 8,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L361"
										}
									],
									"signatures": [
										{
											"id": 550,
											"name": "renameFrom",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Renames an existing collection to this store's name, used for migrations"
													}
												],
												"blockTags": [
													{
														"tag": "@throws",
														"content": [
															{
																"kind": "text",
																"text": "Error if the old collection doesn't exist or if this store's collection already exists"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 361,
													"character": 8,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L361"
												}
											],
											"parameters": [
												{
													"id": 551,
													"name": "oldName",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The previous name of the collection"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 552,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 553,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 554,
																	"name": "session",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "src/data/store.ts",
																			"line": 361,
																			"character": 48,
																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L361"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "mongodb",
																			"packagePath": "mongodb.d.ts",
																			"qualifiedName": "ClientSession"
																		},
																		"name": "ClientSession",
																		"package": "mongodb"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		554
																	]
																}
															],
															"sources": [
																{
																	"fileName": "src/data/store.ts",
																	"line": 361,
																	"character": 46,
																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L361"
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 555,
									"name": "requireById",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 206,
											"character": 8,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L206"
										}
									],
									"signatures": [
										{
											"id": 556,
											"name": "requireById",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Fetches a single document by its ID, or throws an error if not found"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "The document"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 206,
													"character": 8,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L206"
												}
											],
											"parameters": [
												{
													"id": 557,
													"name": "id",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The ID of the document to find"
															}
														]
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"target": {
																	"packageName": "bson",
																	"packagePath": "bson.d.ts",
																	"qualifiedName": "ObjectId"
																},
																"name": "ObjectId",
																"package": "bson"
															}
														]
													}
												},
												{
													"id": 558,
													"name": "errorHandler",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Optional error handler to return a custom error if the document is not found"
															}
														]
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 559,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/data/store.ts",
																	"line": 206,
																	"character": 58,
																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L206"
																}
															],
															"signatures": [
																{
																	"id": 560,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/data/store.ts",
																			"line": 206,
																			"character": 58,
																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L206"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "typescript",
																			"packagePath": "lib/lib.es5.d.ts",
																			"qualifiedName": "Error"
																		},
																		"name": "Error",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"packageName": "mongodb",
																	"packagePath": "mongodb.d.ts",
																	"qualifiedName": "EnhancedOmit"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "modelence",
																			"packagePath": "src/data/types.ts",
																			"qualifiedName": "InferDocumentType"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 491,
																				"name": "TSchema",
																				"package": "modelence",
																				"qualifiedName": "Store.TSchema",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "InferDocumentType",
																		"package": "modelence"
																	},
																	{
																		"type": "literal",
																		"value": "_id"
																	}
																],
																"name": "EnhancedOmit",
																"package": "mongodb"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 561,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "node_modules/mongodb/mongodb.d.ts",
																			"line": 8786,
																			"character": 69
																		}
																	]
																}
															},
															{
																"type": "reference",
																"target": 492,
																"name": "TMethods",
																"package": "modelence",
																"qualifiedName": "Store.TMethods",
																"refersToTypeParameter": true
															}
														]
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 562,
									"name": "requireOne",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 161,
											"character": 8,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L161"
										}
									],
									"signatures": [
										{
											"id": 563,
											"name": "requireOne",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 161,
													"character": 8,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L161"
												}
											],
											"parameters": [
												{
													"id": 564,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "Filter"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "modelence",
																	"packagePath": "src/data/types.ts",
																	"qualifiedName": "InferDocumentType"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 491,
																		"name": "TSchema",
																		"package": "modelence",
																		"qualifiedName": "Store.TSchema",
																		"refersToTypeParameter": true
																	}
																],
																"name": "InferDocumentType",
																"package": "modelence"
															}
														],
														"name": "Filter",
														"package": "mongodb"
													}
												},
												{
													"id": 565,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "FindOptions"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "bson",
																	"packagePath": "bson.d.ts",
																	"qualifiedName": "Document"
																},
																"name": "Document",
																"package": "bson"
															}
														],
														"name": "FindOptions",
														"package": "mongodb"
													}
												},
												{
													"id": 566,
													"name": "errorHandler",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 567,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/data/store.ts",
																	"line": 164,
																	"character": 19,
																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L164"
																}
															],
															"signatures": [
																{
																	"id": 568,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/data/store.ts",
																			"line": 164,
																			"character": 19,
																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L164"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "typescript",
																			"packagePath": "lib/lib.es5.d.ts",
																			"qualifiedName": "Error"
																		},
																		"name": "Error",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"packageName": "mongodb",
																	"packagePath": "mongodb.d.ts",
																	"qualifiedName": "EnhancedOmit"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "modelence",
																			"packagePath": "src/data/types.ts",
																			"qualifiedName": "InferDocumentType"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 491,
																				"name": "TSchema",
																				"package": "modelence",
																				"qualifiedName": "Store.TSchema",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "InferDocumentType",
																		"package": "modelence"
																	},
																	{
																		"type": "literal",
																		"value": "_id"
																	}
																],
																"name": "EnhancedOmit",
																"package": "mongodb"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 569,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "node_modules/mongodb/mongodb.d.ts",
																			"line": 8786,
																			"character": 69
																		}
																	]
																}
															},
															{
																"type": "reference",
																"target": 492,
																"name": "TMethods",
																"package": "modelence",
																"qualifiedName": "Store.TMethods",
																"refersToTypeParameter": true
															}
														]
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 570,
									"name": "updateMany",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 278,
											"character": 8,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L278"
										}
									],
									"signatures": [
										{
											"id": 571,
											"name": "updateMany",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Updates multiple documents"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "The result of the update operation"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 278,
													"character": 8,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L278"
												}
											],
											"parameters": [
												{
													"id": 572,
													"name": "selector",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The selector to find the documents to update"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "Filter"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "modelence",
																	"packagePath": "src/data/types.ts",
																	"qualifiedName": "InferDocumentType"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 491,
																		"name": "TSchema",
																		"package": "modelence",
																		"qualifiedName": "Store.TSchema",
																		"refersToTypeParameter": true
																	}
																],
																"name": "InferDocumentType",
																"package": "modelence"
															}
														],
														"name": "Filter",
														"package": "mongodb"
													}
												},
												{
													"id": 573,
													"name": "update",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The MongoDB modifier to apply to the documents"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "UpdateFilter"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "modelence",
																	"packagePath": "src/data/types.ts",
																	"qualifiedName": "InferDocumentType"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 491,
																		"name": "TSchema",
																		"package": "modelence",
																		"qualifiedName": "Store.TSchema",
																		"refersToTypeParameter": true
																	}
																],
																"name": "InferDocumentType",
																"package": "modelence"
															}
														],
														"name": "UpdateFilter",
														"package": "mongodb"
													}
												},
												{
													"id": 574,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 575,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 576,
																	"name": "session",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "src/data/store.ts",
																			"line": 281,
																			"character": 16,
																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L281"
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "mongodb",
																			"packagePath": "mongodb.d.ts",
																			"qualifiedName": "ClientSession"
																		},
																		"name": "ClientSession",
																		"package": "mongodb"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		576
																	]
																}
															],
															"sources": [
																{
																	"fileName": "src/data/store.ts",
																	"line": 281,
																	"character": 14,
																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L281"
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "UpdateResult"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "bson",
																	"packagePath": "bson.d.ts",
																	"qualifiedName": "Document"
																},
																"name": "Document",
																"package": "bson"
															}
														],
														"name": "UpdateResult",
														"package": "mongodb"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 577,
									"name": "updateOne",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 253,
											"character": 8,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L253"
										}
									],
									"signatures": [
										{
											"id": 578,
											"name": "updateOne",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Updates a single document"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "The result of the update operation"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 253,
													"character": 8,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L253"
												}
											],
											"parameters": [
												{
													"id": 579,
													"name": "selector",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The selector to find the document to update"
															}
														]
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"target": {
																	"packageName": "mongodb",
																	"packagePath": "mongodb.d.ts",
																	"qualifiedName": "Filter"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "modelence",
																			"packagePath": "src/data/types.ts",
																			"qualifiedName": "InferDocumentType"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 491,
																				"name": "TSchema",
																				"package": "modelence",
																				"qualifiedName": "Store.TSchema",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "InferDocumentType",
																		"package": "modelence"
																	}
																],
																"name": "Filter",
																"package": "mongodb"
															}
														]
													}
												},
												{
													"id": 580,
													"name": "update",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The update to apply to the document"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "UpdateFilter"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "modelence",
																	"packagePath": "src/data/types.ts",
																	"qualifiedName": "InferDocumentType"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 491,
																		"name": "TSchema",
																		"package": "modelence",
																		"qualifiedName": "Store.TSchema",
																		"refersToTypeParameter": true
																	}
																],
																"name": "InferDocumentType",
																"package": "modelence"
															}
														],
														"name": "UpdateFilter",
														"package": "mongodb"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "UpdateResult"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "bson",
																	"packagePath": "bson.d.ts",
																	"qualifiedName": "Document"
																},
																"name": "Document",
																"package": "bson"
															}
														],
														"name": "UpdateResult",
														"package": "mongodb"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 581,
									"name": "upsertMany",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 293,
											"character": 8,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L293"
										}
									],
									"signatures": [
										{
											"id": 582,
											"name": "upsertMany",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Updates multiple documents, or inserts them if they don't exist"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "The result of the update operation"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 293,
													"character": 8,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L293"
												}
											],
											"parameters": [
												{
													"id": 583,
													"name": "selector",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The selector to find the documents to update"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "Filter"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "modelence",
																	"packagePath": "src/data/types.ts",
																	"qualifiedName": "InferDocumentType"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 491,
																		"name": "TSchema",
																		"package": "modelence",
																		"qualifiedName": "Store.TSchema",
																		"refersToTypeParameter": true
																	}
																],
																"name": "InferDocumentType",
																"package": "modelence"
															}
														],
														"name": "Filter",
														"package": "mongodb"
													}
												},
												{
													"id": 584,
													"name": "update",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The MongoDB modifier to apply to the documents"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "UpdateFilter"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "modelence",
																	"packagePath": "src/data/types.ts",
																	"qualifiedName": "InferDocumentType"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 491,
																		"name": "TSchema",
																		"package": "modelence",
																		"qualifiedName": "Store.TSchema",
																		"refersToTypeParameter": true
																	}
																],
																"name": "InferDocumentType",
																"package": "modelence"
															}
														],
														"name": "UpdateFilter",
														"package": "mongodb"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "UpdateResult"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "bson",
																	"packagePath": "bson.d.ts",
																	"qualifiedName": "Document"
																},
																"name": "Document",
																"package": "bson"
															}
														],
														"name": "UpdateResult",
														"package": "mongodb"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 585,
									"name": "upsertOne",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "src/data/store.ts",
											"line": 267,
											"character": 8,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L267"
										}
									],
									"signatures": [
										{
											"id": 586,
											"name": "upsertOne",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Updates a single document, or inserts it if it doesn't exist"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "The result of the update operation"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "src/data/store.ts",
													"line": 267,
													"character": 8,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L267"
												}
											],
											"parameters": [
												{
													"id": 587,
													"name": "selector",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The selector to find the document to update"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "Filter"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "modelence",
																	"packagePath": "src/data/types.ts",
																	"qualifiedName": "InferDocumentType"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 491,
																		"name": "TSchema",
																		"package": "modelence",
																		"qualifiedName": "Store.TSchema",
																		"refersToTypeParameter": true
																	}
																],
																"name": "InferDocumentType",
																"package": "modelence"
															}
														],
														"name": "Filter",
														"package": "mongodb"
													}
												},
												{
													"id": 588,
													"name": "update",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The MongoDB modifier to apply to the document"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "UpdateFilter"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "modelence",
																	"packagePath": "src/data/types.ts",
																	"qualifiedName": "InferDocumentType"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 491,
																		"name": "TSchema",
																		"package": "modelence",
																		"qualifiedName": "Store.TSchema",
																		"refersToTypeParameter": true
																	}
																],
																"name": "InferDocumentType",
																"package": "modelence"
															}
														],
														"name": "UpdateFilter",
														"package": "mongodb"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"packageName": "typescript",
													"packagePath": "lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"packageName": "mongodb",
															"packagePath": "mongodb.d.ts",
															"qualifiedName": "UpdateResult"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "bson",
																	"packagePath": "bson.d.ts",
																	"qualifiedName": "Document"
																},
																"name": "Document",
																"package": "bson"
															}
														],
														"name": "UpdateResult",
														"package": "mongodb"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"children": [
										489
									]
								},
								{
									"title": "Properties",
									"children": [
										504
									]
								},
								{
									"title": "Methods",
									"children": [
										506,
										510,
										513,
										516,
										519,
										528,
										532,
										537,
										539,
										541,
										544,
										547,
										549,
										555,
										562,
										570,
										577,
										581,
										585
									]
								}
							],
							"sources": [
								{
									"fileName": "src/data/store.ts",
									"line": 50,
									"character": 13,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L50"
								}
							],
							"typeParameters": [
								{
									"id": 589,
									"name": "TSchema",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The document schema type"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "modelence",
											"packagePath": "src/data/types.ts",
											"qualifiedName": "ModelSchema"
										},
										"name": "ModelSchema",
										"package": "modelence"
									}
								},
								{
									"id": 590,
									"name": "TMethods",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Custom methods that will be added to documents"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 591,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "src/data/store.ts",
															"line": 52,
															"character": 34,
															"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L52"
														}
													],
													"signatures": [
														{
															"id": 592,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 593,
																	"name": "this",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"packageName": "mongodb",
																					"packagePath": "mongodb.d.ts",
																					"qualifiedName": "WithId"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"packageName": "modelence",
																							"packagePath": "src/data/types.ts",
																							"qualifiedName": "InferDocumentType"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": 491,
																								"name": "TSchema",
																								"package": "modelence",
																								"qualifiedName": "Store.TSchema",
																								"refersToTypeParameter": true
																							}
																						],
																						"name": "InferDocumentType",
																						"package": "modelence"
																					}
																				],
																				"name": "WithId",
																				"package": "mongodb"
																			},
																			{
																				"type": "reference",
																				"target": 492,
																				"name": "TMethods",
																				"package": "modelence",
																				"qualifiedName": "Store.TMethods",
																				"refersToTypeParameter": true
																			}
																		]
																	}
																},
																{
																	"id": 594,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "typescript",
																			"packagePath": "lib/lib.es5.d.ts",
																			"qualifiedName": "Parameters"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Parameters",
																		"package": "typescript"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 595,
							"name": "CloudBackendConnectResponse",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"sources": [
								{
									"fileName": "src/app/backendApi.ts",
									"line": 24,
									"character": 12,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/app/backendApi.ts#L24"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"packageName": "modelence",
											"packagePath": "src/app/backendApi.ts",
											"qualifiedName": "CloudBackendConnectOkResponse"
										},
										"name": "CloudBackendConnectOkResponse",
										"package": "modelence"
									},
									{
										"type": "reference",
										"target": {
											"packageName": "modelence",
											"packagePath": "src/app/backendApi.ts",
											"qualifiedName": "CloudBackendConnectErrorResponse"
										},
										"name": "CloudBackendConnectErrorResponse",
										"package": "modelence"
									}
								]
							}
						},
						{
							"id": 596,
							"name": "HttpMethod",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"sources": [
								{
									"fileName": "src/routes/types.ts",
									"line": 3,
									"character": 12,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/routes/types.ts#L3"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "get"
									},
									{
										"type": "literal",
										"value": "post"
									},
									{
										"type": "literal",
										"value": "put"
									},
									{
										"type": "literal",
										"value": "delete"
									},
									{
										"type": "literal",
										"value": "patch"
									},
									{
										"type": "literal",
										"value": "options"
									},
									{
										"type": "literal",
										"value": "head"
									}
								]
							}
						},
						{
							"id": 597,
							"name": "RouteDefinition",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"children": [
								{
									"id": 598,
									"name": "errorHandler",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/routes/types.ts",
											"line": 31,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/routes/types.ts#L31"
										}
									],
									"type": {
										"type": "reference",
										"target": 601,
										"name": "RouteHandler",
										"package": "modelence"
									}
								},
								{
									"id": 599,
									"name": "handlers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "src/routes/types.ts",
											"line": 30,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/routes/types.ts#L30"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "modelence",
											"packagePath": "src/routes/types.ts",
											"qualifiedName": "RouteHandlers"
										},
										"name": "RouteHandlers",
										"package": "modelence"
									}
								},
								{
									"id": 600,
									"name": "path",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "src/routes/types.ts",
											"line": 29,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/routes/types.ts#L29"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										598,
										599,
										600
									]
								}
							],
							"sources": [
								{
									"fileName": "src/routes/types.ts",
									"line": 28,
									"character": 12,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/routes/types.ts#L28"
								}
							]
						},
						{
							"id": 601,
							"name": "RouteHandler",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"sources": [
								{
									"fileName": "src/routes/types.ts",
									"line": 22,
									"character": 12,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/routes/types.ts#L22"
								}
							],
							"typeParameters": [
								{
									"id": 602,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 603,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "src/routes/types.ts",
											"line": 22,
											"character": 36,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/routes/types.ts#L22"
										}
									],
									"signatures": [
										{
											"id": 604,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 605,
													"name": "params",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 606,
														"name": "RouteParams",
														"package": "modelence"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"packageName": "typescript",
															"packagePath": "lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 613,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 602,
																		"name": "T",
																		"package": "modelence",
																		"refersToTypeParameter": true
																	}
																],
																"name": "RouteResponse",
																"package": "modelence"
															}
														],
														"name": "Promise",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": 613,
														"typeArguments": [
															{
																"type": "reference",
																"target": 602,
																"name": "T",
																"package": "modelence",
																"refersToTypeParameter": true
															}
														],
														"name": "RouteResponse",
														"package": "modelence"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 606,
							"name": "RouteParams",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"children": [
								{
									"id": 607,
									"name": "body",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "src/routes/types.ts",
											"line": 7,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/routes/types.ts#L7"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 608,
									"name": "cookies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "src/routes/types.ts",
											"line": 10,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/routes/types.ts#L10"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 609,
									"name": "headers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "src/routes/types.ts",
											"line": 9,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/routes/types.ts#L9"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 610,
									"name": "params",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "src/routes/types.ts",
											"line": 8,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/routes/types.ts#L8"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 611,
									"name": "query",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "src/routes/types.ts",
											"line": 6,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/routes/types.ts#L6"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 612,
									"name": "req",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "src/routes/types.ts",
											"line": 11,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/routes/types.ts#L11"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "@types/express",
											"packagePath": "index.d.ts",
											"qualifiedName": "e.Request"
										},
										"name": "Request",
										"package": "@types/express",
										"qualifiedName": "e.Request"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										607,
										608,
										609,
										610,
										611,
										612
									]
								}
							],
							"sources": [
								{
									"fileName": "src/routes/types.ts",
									"line": 5,
									"character": 12,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/routes/types.ts#L5"
								}
							]
						},
						{
							"id": 613,
							"name": "RouteResponse",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"children": [
								{
									"id": 614,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "src/routes/types.ts",
											"line": 15,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/routes/types.ts#L15"
										}
									],
									"type": {
										"type": "reference",
										"target": 617,
										"name": "T",
										"package": "modelence",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 615,
									"name": "headers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/routes/types.ts",
											"line": 17,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/routes/types.ts#L17"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 616,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/routes/types.ts",
											"line": 16,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/routes/types.ts#L16"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										614,
										615,
										616
									]
								}
							],
							"sources": [
								{
									"fileName": "src/routes/types.ts",
									"line": 14,
									"character": 12,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/routes/types.ts#L14"
								}
							],
							"typeParameters": [
								{
									"id": 617,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 618,
							"name": "UserInfo",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"children": [
								{
									"id": 619,
									"name": "handle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "src/auth/types.ts",
											"line": 7,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/types.ts#L7"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 620,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "src/auth/types.ts",
											"line": 6,
											"character": 2,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/types.ts#L6"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										619,
										620
									]
								}
							],
							"sources": [
								{
									"fileName": "src/auth/types.ts",
									"line": 5,
									"character": 12,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/types.ts#L5"
								}
							]
						},
						{
							"id": 621,
							"name": "dbUsers",
							"variant": "declaration",
							"kind": 32,
							"flags": {
								"isConst": true
							},
							"sources": [
								{
									"fileName": "src/auth/db.ts",
									"line": 4,
									"character": 13,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L4"
								}
							],
							"type": {
								"type": "reference",
								"target": 488,
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 622,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 623,
													"name": "authMethods",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/auth/db.ts",
															"line": 12,
															"character": 4,
															"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L12"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "zod",
															"packagePath": "dist/types/v3/types.d.ts",
															"qualifiedName": "ZodObject"
														},
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 624,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 625,
																			"name": "google",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/auth/db.ts",
																					"line": 16,
																					"character": 6,
																					"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L16"
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"packageName": "zod",
																					"packagePath": "dist/types/v3/types.d.ts",
																					"qualifiedName": "ZodOptional"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"packageName": "zod",
																							"packagePath": "dist/types/v3/types.d.ts",
																							"qualifiedName": "ZodObject"
																						},
																						"typeArguments": [
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 626,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 627,
																											"name": "id",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {},
																											"sources": [
																												{
																													"fileName": "src/auth/db.ts",
																													"line": 17,
																													"character": 8,
																													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L17"
																												}
																											],
																											"type": {
																												"type": "reference",
																												"target": {
																													"packageName": "zod",
																													"packagePath": "dist/types/v3/types.d.ts",
																													"qualifiedName": "ZodString"
																												},
																												"name": "ZodString",
																												"package": "zod"
																											},
																											"defaultValue": "..."
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												627
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "src/auth/db.ts",
																											"line": 16,
																											"character": 28,
																											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L16"
																										}
																									]
																								}
																							},
																							{
																								"type": "literal",
																								"value": "strip"
																							},
																							{
																								"type": "reference",
																								"target": {
																									"packageName": "zod",
																									"packagePath": "dist/types/v3/types.d.ts",
																									"qualifiedName": "ZodTypeAny"
																								},
																								"name": "ZodTypeAny",
																								"package": "zod"
																							},
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 628,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 629,
																											"name": "id",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {},
																											"sources": [
																												{
																													"fileName": "src/auth/db.ts",
																													"line": 17,
																													"character": 8,
																													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L17"
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											},
																											"defaultValue": "..."
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												629
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																											"line": 45,
																											"character": 38
																										}
																									]
																								}
																							},
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 630,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 631,
																											"name": "id",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {},
																											"sources": [
																												{
																													"fileName": "src/auth/db.ts",
																													"line": 17,
																													"character": 8,
																													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L17"
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											},
																											"defaultValue": "..."
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												631
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																											"line": 45,
																											"character": 38
																										}
																									]
																								}
																							}
																						],
																						"name": "ZodObject",
																						"package": "zod"
																					}
																				],
																				"name": "ZodOptional",
																				"package": "zod"
																			},
																			"defaultValue": "..."
																		},
																		{
																			"id": 632,
																			"name": "password",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "src/auth/db.ts",
																					"line": 13,
																					"character": 6,
																					"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L13"
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"packageName": "zod",
																					"packagePath": "dist/types/v3/types.d.ts",
																					"qualifiedName": "ZodOptional"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"packageName": "zod",
																							"packagePath": "dist/types/v3/types.d.ts",
																							"qualifiedName": "ZodObject"
																						},
																						"typeArguments": [
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 633,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 634,
																											"name": "hash",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {},
																											"sources": [
																												{
																													"fileName": "src/auth/db.ts",
																													"line": 14,
																													"character": 8,
																													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L14"
																												}
																											],
																											"type": {
																												"type": "reference",
																												"target": {
																													"packageName": "zod",
																													"packagePath": "dist/types/v3/types.d.ts",
																													"qualifiedName": "ZodString"
																												},
																												"name": "ZodString",
																												"package": "zod"
																											},
																											"defaultValue": "..."
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												634
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "src/auth/db.ts",
																											"line": 13,
																											"character": 30,
																											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L13"
																										}
																									]
																								}
																							},
																							{
																								"type": "literal",
																								"value": "strip"
																							},
																							{
																								"type": "reference",
																								"target": {
																									"packageName": "zod",
																									"packagePath": "dist/types/v3/types.d.ts",
																									"qualifiedName": "ZodTypeAny"
																								},
																								"name": "ZodTypeAny",
																								"package": "zod"
																							},
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 635,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 636,
																											"name": "hash",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {},
																											"sources": [
																												{
																													"fileName": "src/auth/db.ts",
																													"line": 14,
																													"character": 8,
																													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L14"
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											},
																											"defaultValue": "..."
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												636
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																											"line": 45,
																											"character": 38
																										}
																									]
																								}
																							},
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 637,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 638,
																											"name": "hash",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {},
																											"sources": [
																												{
																													"fileName": "src/auth/db.ts",
																													"line": 14,
																													"character": 8,
																													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L14"
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											},
																											"defaultValue": "..."
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												638
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																											"line": 45,
																											"character": 38
																										}
																									]
																								}
																							}
																						],
																						"name": "ZodObject",
																						"package": "zod"
																					}
																				],
																				"name": "ZodOptional",
																				"package": "zod"
																			},
																			"defaultValue": "..."
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				625,
																				632
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/auth/db.ts",
																			"line": 12,
																			"character": 31,
																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L12"
																		}
																	]
																}
															},
															{
																"type": "literal",
																"value": "strip"
															},
															{
																"type": "reference",
																"target": {
																	"packageName": "zod",
																	"packagePath": "dist/types/v3/types.d.ts",
																	"qualifiedName": "ZodTypeAny"
																},
																"name": "ZodTypeAny",
																"package": "zod"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 639,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 640,
																			"name": "google",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "src/auth/db.ts",
																					"line": 16,
																					"character": 6,
																					"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L16"
																				}
																			],
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 641,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"children": [
																						{
																							"id": 642,
																							"name": "id",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "src/auth/db.ts",
																									"line": 17,
																									"character": 8,
																									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L17"
																								}
																							],
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								642
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																							"line": 45,
																							"character": 38
																						}
																					]
																				}
																			},
																			"defaultValue": "..."
																		},
																		{
																			"id": 643,
																			"name": "password",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "src/auth/db.ts",
																					"line": 13,
																					"character": 6,
																					"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L13"
																				}
																			],
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 644,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"children": [
																						{
																							"id": 645,
																							"name": "hash",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "src/auth/db.ts",
																									"line": 14,
																									"character": 8,
																									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L14"
																								}
																							],
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								645
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																							"line": 45,
																							"character": 38
																						}
																					]
																				}
																			},
																			"defaultValue": "..."
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				640,
																				643
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																			"line": 45,
																			"character": 38
																		}
																	]
																}
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 646,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 647,
																			"name": "google",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "src/auth/db.ts",
																					"line": 16,
																					"character": 6,
																					"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L16"
																				}
																			],
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 648,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"children": [
																						{
																							"id": 649,
																							"name": "id",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "src/auth/db.ts",
																									"line": 17,
																									"character": 8,
																									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L17"
																								}
																							],
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								649
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																							"line": 45,
																							"character": 38
																						}
																					]
																				}
																			},
																			"defaultValue": "..."
																		},
																		{
																			"id": 650,
																			"name": "password",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "src/auth/db.ts",
																					"line": 13,
																					"character": 6,
																					"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L13"
																				}
																			],
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 651,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"children": [
																						{
																							"id": 652,
																							"name": "hash",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "src/auth/db.ts",
																									"line": 14,
																									"character": 8,
																									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L14"
																								}
																							],
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								652
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																							"line": 45,
																							"character": 38
																						}
																					]
																				}
																			},
																			"defaultValue": "..."
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				647,
																				650
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																			"line": 45,
																			"character": 38
																		}
																	]
																}
															}
														],
														"name": "ZodObject",
														"package": "zod"
													},
													"defaultValue": "..."
												},
												{
													"id": 653,
													"name": "createdAt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/auth/db.ts",
															"line": 11,
															"character": 4,
															"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L11"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "zod",
															"packagePath": "dist/types/v3/types.d.ts",
															"qualifiedName": "ZodDate"
														},
														"name": "ZodDate",
														"package": "zod"
													},
													"defaultValue": "..."
												},
												{
													"id": 654,
													"name": "emails",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/auth/db.ts",
															"line": 7,
															"character": 4,
															"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L7"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "zod",
															"packagePath": "dist/types/v3/types.d.ts",
															"qualifiedName": "ZodOptional"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "zod",
																	"packagePath": "dist/types/v3/types.d.ts",
																	"qualifiedName": "ZodArray"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "zod",
																			"packagePath": "dist/types/v3/types.d.ts",
																			"qualifiedName": "ZodObject"
																		},
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 655,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"children": [
																						{
																							"id": 656,
																							"name": "address",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "src/auth/db.ts",
																									"line": 8,
																									"character": 6,
																									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L8"
																								}
																							],
																							"type": {
																								"type": "reference",
																								"target": {
																									"packageName": "zod",
																									"packagePath": "dist/types/v3/types.d.ts",
																									"qualifiedName": "ZodString"
																								},
																								"name": "ZodString",
																								"package": "zod"
																							},
																							"defaultValue": "..."
																						},
																						{
																							"id": 657,
																							"name": "verified",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "src/auth/db.ts",
																									"line": 9,
																									"character": 6,
																									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L9"
																								}
																							],
																							"type": {
																								"type": "reference",
																								"target": {
																									"packageName": "zod",
																									"packagePath": "dist/types/v3/types.d.ts",
																									"qualifiedName": "ZodBoolean"
																								},
																								"name": "ZodBoolean",
																								"package": "zod"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								656,
																								657
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "src/auth/db.ts",
																							"line": 7,
																							"character": 39,
																							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L7"
																						}
																					]
																				}
																			},
																			{
																				"type": "literal",
																				"value": "strip"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"packageName": "zod",
																					"packagePath": "dist/types/v3/types.d.ts",
																					"qualifiedName": "ZodTypeAny"
																				},
																				"name": "ZodTypeAny",
																				"package": "zod"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 658,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"children": [
																						{
																							"id": 659,
																							"name": "address",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "src/auth/db.ts",
																									"line": 8,
																									"character": 6,
																									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L8"
																								}
																							],
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						},
																						{
																							"id": 660,
																							"name": "verified",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "src/auth/db.ts",
																									"line": 9,
																									"character": 6,
																									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L9"
																								}
																							],
																							"type": {
																								"type": "intrinsic",
																								"name": "boolean"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								659,
																								660
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																							"line": 45,
																							"character": 38
																						}
																					]
																				}
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 661,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"children": [
																						{
																							"id": 662,
																							"name": "address",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "src/auth/db.ts",
																									"line": 8,
																									"character": 6,
																									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L8"
																								}
																							],
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							},
																							"defaultValue": "..."
																						},
																						{
																							"id": 663,
																							"name": "verified",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "src/auth/db.ts",
																									"line": 9,
																									"character": 6,
																									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L9"
																								}
																							],
																							"type": {
																								"type": "intrinsic",
																								"name": "boolean"
																							},
																							"defaultValue": "..."
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								662,
																								663
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																							"line": 45,
																							"character": 38
																						}
																					]
																				}
																			}
																		],
																		"name": "ZodObject",
																		"package": "zod"
																	},
																	{
																		"type": "literal",
																		"value": "many"
																	}
																],
																"name": "ZodArray",
																"package": "zod"
															}
														],
														"name": "ZodOptional",
														"package": "zod"
													},
													"defaultValue": "..."
												},
												{
													"id": 664,
													"name": "handle",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "src/auth/db.ts",
															"line": 6,
															"character": 4,
															"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L6"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "zod",
															"packagePath": "dist/types/v3/types.d.ts",
															"qualifiedName": "ZodString"
														},
														"name": "ZodString",
														"package": "zod"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														623,
														653,
														654,
														664
													]
												}
											],
											"sources": [
												{
													"fileName": "src/auth/db.ts",
													"line": 5,
													"character": 10,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L5"
												}
											]
										}
									},
									{
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 665,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "src/data/store.ts",
															"line": 52,
															"character": 34,
															"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L52"
														}
													],
													"signatures": [
														{
															"id": 666,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "src/data/store.ts",
																	"line": 52,
																	"character": 34,
																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/store.ts#L52"
																}
															],
															"parameters": [
																{
																	"id": 667,
																	"name": "this",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"packageName": "typescript",
																					"packagePath": "lib/lib.es5.d.ts",
																					"qualifiedName": "Pick"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"packageName": "modelence",
																							"packagePath": "src/data/types.ts",
																							"qualifiedName": "InferDocumentType"
																						},
																						"typeArguments": [
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 668,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 669,
																											"name": "authMethods",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {},
																											"sources": [
																												{
																													"fileName": "src/auth/db.ts",
																													"line": 12,
																													"character": 4,
																													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L12"
																												}
																											],
																											"type": {
																												"type": "reference",
																												"target": {
																													"packageName": "zod",
																													"packagePath": "dist/types/v3/types.d.ts",
																													"qualifiedName": "ZodObject"
																												},
																												"typeArguments": [
																													{
																														"type": "reflection",
																														"declaration": {
																															"id": 670,
																															"name": "__type",
																															"variant": "declaration",
																															"kind": 65536,
																															"flags": {},
																															"children": [
																																{
																																	"id": 671,
																																	"name": "google",
																																	"variant": "declaration",
																																	"kind": 1024,
																																	"flags": {},
																																	"sources": [
																																		{
																																			"fileName": "src/auth/db.ts",
																																			"line": 16,
																																			"character": 6,
																																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L16"
																																		}
																																	],
																																	"type": {
																																		"type": "reference",
																																		"target": {
																																			"packageName": "zod",
																																			"packagePath": "dist/types/v3/types.d.ts",
																																			"qualifiedName": "ZodOptional"
																																		},
																																		"typeArguments": [
																																			{
																																				"type": "reference",
																																				"target": {
																																					"packageName": "zod",
																																					"packagePath": "dist/types/v3/types.d.ts",
																																					"qualifiedName": "ZodObject"
																																				},
																																				"typeArguments": [
																																					{
																																						"type": "unknown",
																																						"name": "..."
																																					},
																																					{
																																						"type": "unknown",
																																						"name": "..."
																																					},
																																					{
																																						"type": "unknown",
																																						"name": "..."
																																					},
																																					{
																																						"type": "unknown",
																																						"name": "..."
																																					},
																																					{
																																						"type": "unknown",
																																						"name": "..."
																																					}
																																				],
																																				"name": "ZodObject",
																																				"package": "zod"
																																			}
																																		],
																																		"name": "ZodOptional",
																																		"package": "zod"
																																	},
																																	"defaultValue": "..."
																																},
																																{
																																	"id": 672,
																																	"name": "password",
																																	"variant": "declaration",
																																	"kind": 1024,
																																	"flags": {},
																																	"sources": [
																																		{
																																			"fileName": "src/auth/db.ts",
																																			"line": 13,
																																			"character": 6,
																																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L13"
																																		}
																																	],
																																	"type": {
																																		"type": "reference",
																																		"target": {
																																			"packageName": "zod",
																																			"packagePath": "dist/types/v3/types.d.ts",
																																			"qualifiedName": "ZodOptional"
																																		},
																																		"typeArguments": [
																																			{
																																				"type": "reference",
																																				"target": {
																																					"packageName": "zod",
																																					"packagePath": "dist/types/v3/types.d.ts",
																																					"qualifiedName": "ZodObject"
																																				},
																																				"typeArguments": [
																																					{
																																						"type": "unknown",
																																						"name": "..."
																																					},
																																					{
																																						"type": "unknown",
																																						"name": "..."
																																					},
																																					{
																																						"type": "unknown",
																																						"name": "..."
																																					},
																																					{
																																						"type": "unknown",
																																						"name": "..."
																																					},
																																					{
																																						"type": "unknown",
																																						"name": "..."
																																					}
																																				],
																																				"name": "ZodObject",
																																				"package": "zod"
																																			}
																																		],
																																		"name": "ZodOptional",
																																		"package": "zod"
																																	},
																																	"defaultValue": "..."
																																}
																															],
																															"groups": [
																																{
																																	"title": "Properties",
																																	"children": [
																																		671,
																																		672
																																	]
																																}
																															],
																															"sources": [
																																{
																																	"fileName": "src/auth/db.ts",
																																	"line": 12,
																																	"character": 31,
																																	"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L12"
																																}
																															]
																														}
																													},
																													{
																														"type": "literal",
																														"value": "strip"
																													},
																													{
																														"type": "reference",
																														"target": {
																															"packageName": "zod",
																															"packagePath": "dist/types/v3/types.d.ts",
																															"qualifiedName": "ZodTypeAny"
																														},
																														"name": "ZodTypeAny",
																														"package": "zod"
																													},
																													{
																														"type": "reflection",
																														"declaration": {
																															"id": 673,
																															"name": "__type",
																															"variant": "declaration",
																															"kind": 65536,
																															"flags": {},
																															"children": [
																																{
																																	"id": 674,
																																	"name": "google",
																																	"variant": "declaration",
																																	"kind": 1024,
																																	"flags": {
																																		"isOptional": true
																																	},
																																	"sources": [
																																		{
																																			"fileName": "src/auth/db.ts",
																																			"line": 16,
																																			"character": 6,
																																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L16"
																																		}
																																	],
																																	"type": {
																																		"type": "reflection",
																																		"declaration": {
																																			"id": 675,
																																			"name": "__type",
																																			"variant": "declaration",
																																			"kind": 65536,
																																			"flags": {},
																																			"children": [
																																				{
																																					"id": 676,
																																					"name": "id",
																																					"variant": "declaration",
																																					"kind": 1024,
																																					"flags": {},
																																					"sources": [
																																						{
																																							"fileName": "src/auth/db.ts",
																																							"line": 17,
																																							"character": 8,
																																							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L17"
																																						}
																																					],
																																					"type": {
																																						"type": "unknown",
																																						"name": "..."
																																					},
																																					"defaultValue": "..."
																																				}
																																			],
																																			"groups": [
																																				{
																																					"title": "Properties",
																																					"children": [
																																						676
																																					]
																																				}
																																			],
																																			"sources": [
																																				{
																																					"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																																					"line": 45,
																																					"character": 38
																																				}
																																			]
																																		}
																																	},
																																	"defaultValue": "..."
																																},
																																{
																																	"id": 677,
																																	"name": "password",
																																	"variant": "declaration",
																																	"kind": 1024,
																																	"flags": {
																																		"isOptional": true
																																	},
																																	"sources": [
																																		{
																																			"fileName": "src/auth/db.ts",
																																			"line": 13,
																																			"character": 6,
																																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L13"
																																		}
																																	],
																																	"type": {
																																		"type": "reflection",
																																		"declaration": {
																																			"id": 678,
																																			"name": "__type",
																																			"variant": "declaration",
																																			"kind": 65536,
																																			"flags": {},
																																			"children": [
																																				{
																																					"id": 679,
																																					"name": "hash",
																																					"variant": "declaration",
																																					"kind": 1024,
																																					"flags": {},
																																					"sources": [
																																						{
																																							"fileName": "src/auth/db.ts",
																																							"line": 14,
																																							"character": 8,
																																							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L14"
																																						}
																																					],
																																					"type": {
																																						"type": "unknown",
																																						"name": "..."
																																					},
																																					"defaultValue": "..."
																																				}
																																			],
																																			"groups": [
																																				{
																																					"title": "Properties",
																																					"children": [
																																						679
																																					]
																																				}
																																			],
																																			"sources": [
																																				{
																																					"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																																					"line": 45,
																																					"character": 38
																																				}
																																			]
																																		}
																																	},
																																	"defaultValue": "..."
																																}
																															],
																															"groups": [
																																{
																																	"title": "Properties",
																																	"children": [
																																		674,
																																		677
																																	]
																																}
																															],
																															"sources": [
																																{
																																	"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																																	"line": 45,
																																	"character": 38
																																}
																															]
																														}
																													},
																													{
																														"type": "reflection",
																														"declaration": {
																															"id": 680,
																															"name": "__type",
																															"variant": "declaration",
																															"kind": 65536,
																															"flags": {},
																															"children": [
																																{
																																	"id": 681,
																																	"name": "google",
																																	"variant": "declaration",
																																	"kind": 1024,
																																	"flags": {
																																		"isOptional": true
																																	},
																																	"sources": [
																																		{
																																			"fileName": "src/auth/db.ts",
																																			"line": 16,
																																			"character": 6,
																																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L16"
																																		}
																																	],
																																	"type": {
																																		"type": "reflection",
																																		"declaration": {
																																			"id": 682,
																																			"name": "__type",
																																			"variant": "declaration",
																																			"kind": 65536,
																																			"flags": {},
																																			"children": [
																																				{
																																					"id": 683,
																																					"name": "id",
																																					"variant": "declaration",
																																					"kind": 1024,
																																					"flags": {},
																																					"sources": [
																																						{
																																							"fileName": "src/auth/db.ts",
																																							"line": 17,
																																							"character": 8,
																																							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L17"
																																						}
																																					],
																																					"type": {
																																						"type": "unknown",
																																						"name": "..."
																																					},
																																					"defaultValue": "..."
																																				}
																																			],
																																			"groups": [
																																				{
																																					"title": "Properties",
																																					"children": [
																																						683
																																					]
																																				}
																																			],
																																			"sources": [
																																				{
																																					"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																																					"line": 45,
																																					"character": 38
																																				}
																																			]
																																		}
																																	},
																																	"defaultValue": "..."
																																},
																																{
																																	"id": 684,
																																	"name": "password",
																																	"variant": "declaration",
																																	"kind": 1024,
																																	"flags": {
																																		"isOptional": true
																																	},
																																	"sources": [
																																		{
																																			"fileName": "src/auth/db.ts",
																																			"line": 13,
																																			"character": 6,
																																			"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L13"
																																		}
																																	],
																																	"type": {
																																		"type": "reflection",
																																		"declaration": {
																																			"id": 685,
																																			"name": "__type",
																																			"variant": "declaration",
																																			"kind": 65536,
																																			"flags": {},
																																			"children": [
																																				{
																																					"id": 686,
																																					"name": "hash",
																																					"variant": "declaration",
																																					"kind": 1024,
																																					"flags": {},
																																					"sources": [
																																						{
																																							"fileName": "src/auth/db.ts",
																																							"line": 14,
																																							"character": 8,
																																							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L14"
																																						}
																																					],
																																					"type": {
																																						"type": "unknown",
																																						"name": "..."
																																					},
																																					"defaultValue": "..."
																																				}
																																			],
																																			"groups": [
																																				{
																																					"title": "Properties",
																																					"children": [
																																						686
																																					]
																																				}
																																			],
																																			"sources": [
																																				{
																																					"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																																					"line": 45,
																																					"character": 38
																																				}
																																			]
																																		}
																																	},
																																	"defaultValue": "..."
																																}
																															],
																															"groups": [
																																{
																																	"title": "Properties",
																																	"children": [
																																		681,
																																		684
																																	]
																																}
																															],
																															"sources": [
																																{
																																	"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																																	"line": 45,
																																	"character": 38
																																}
																															]
																														}
																													}
																												],
																												"name": "ZodObject",
																												"package": "zod"
																											},
																											"defaultValue": "..."
																										},
																										{
																											"id": 687,
																											"name": "createdAt",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {},
																											"sources": [
																												{
																													"fileName": "src/auth/db.ts",
																													"line": 11,
																													"character": 4,
																													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L11"
																												}
																											],
																											"type": {
																												"type": "reference",
																												"target": {
																													"packageName": "zod",
																													"packagePath": "dist/types/v3/types.d.ts",
																													"qualifiedName": "ZodDate"
																												},
																												"name": "ZodDate",
																												"package": "zod"
																											},
																											"defaultValue": "..."
																										},
																										{
																											"id": 688,
																											"name": "emails",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {},
																											"sources": [
																												{
																													"fileName": "src/auth/db.ts",
																													"line": 7,
																													"character": 4,
																													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L7"
																												}
																											],
																											"type": {
																												"type": "reference",
																												"target": {
																													"packageName": "zod",
																													"packagePath": "dist/types/v3/types.d.ts",
																													"qualifiedName": "ZodOptional"
																												},
																												"typeArguments": [
																													{
																														"type": "reference",
																														"target": {
																															"packageName": "zod",
																															"packagePath": "dist/types/v3/types.d.ts",
																															"qualifiedName": "ZodArray"
																														},
																														"typeArguments": [
																															{
																																"type": "reference",
																																"target": {
																																	"packageName": "zod",
																																	"packagePath": "dist/types/v3/types.d.ts",
																																	"qualifiedName": "ZodObject"
																																},
																																"typeArguments": [
																																	{
																																		"type": "reflection",
																																		"declaration": {
																																			"id": 689,
																																			"name": "__type",
																																			"variant": "declaration",
																																			"kind": 65536,
																																			"flags": {},
																																			"children": [
																																				{
																																					"id": 690,
																																					"name": "address",
																																					"variant": "declaration",
																																					"kind": 1024,
																																					"flags": {},
																																					"sources": [
																																						{
																																							"fileName": "src/auth/db.ts",
																																							"line": 8,
																																							"character": 6,
																																							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L8"
																																						}
																																					],
																																					"type": {
																																						"type": "unknown",
																																						"name": "..."
																																					},
																																					"defaultValue": "..."
																																				},
																																				{
																																					"id": 691,
																																					"name": "verified",
																																					"variant": "declaration",
																																					"kind": 1024,
																																					"flags": {},
																																					"sources": [
																																						{
																																							"fileName": "src/auth/db.ts",
																																							"line": 9,
																																							"character": 6,
																																							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L9"
																																						}
																																					],
																																					"type": {
																																						"type": "unknown",
																																						"name": "..."
																																					},
																																					"defaultValue": "..."
																																				}
																																			],
																																			"groups": [
																																				{
																																					"title": "Properties",
																																					"children": [
																																						690,
																																						691
																																					]
																																				}
																																			],
																																			"sources": [
																																				{
																																					"fileName": "src/auth/db.ts",
																																					"line": 7,
																																					"character": 39,
																																					"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L7"
																																				}
																																			]
																																		}
																																	},
																																	{
																																		"type": "literal",
																																		"value": "strip"
																																	},
																																	{
																																		"type": "reference",
																																		"target": {
																																			"packageName": "zod",
																																			"packagePath": "dist/types/v3/types.d.ts",
																																			"qualifiedName": "ZodTypeAny"
																																		},
																																		"name": "ZodTypeAny",
																																		"package": "zod"
																																	},
																																	{
																																		"type": "reflection",
																																		"declaration": {
																																			"id": 692,
																																			"name": "__type",
																																			"variant": "declaration",
																																			"kind": 65536,
																																			"flags": {},
																																			"children": [
																																				{
																																					"id": 693,
																																					"name": "address",
																																					"variant": "declaration",
																																					"kind": 1024,
																																					"flags": {},
																																					"sources": [
																																						{
																																							"fileName": "src/auth/db.ts",
																																							"line": 8,
																																							"character": 6,
																																							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L8"
																																						}
																																					],
																																					"type": {
																																						"type": "unknown",
																																						"name": "..."
																																					},
																																					"defaultValue": "..."
																																				},
																																				{
																																					"id": 694,
																																					"name": "verified",
																																					"variant": "declaration",
																																					"kind": 1024,
																																					"flags": {},
																																					"sources": [
																																						{
																																							"fileName": "src/auth/db.ts",
																																							"line": 9,
																																							"character": 6,
																																							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L9"
																																						}
																																					],
																																					"type": {
																																						"type": "unknown",
																																						"name": "..."
																																					},
																																					"defaultValue": "..."
																																				}
																																			],
																																			"groups": [
																																				{
																																					"title": "Properties",
																																					"children": [
																																						693,
																																						694
																																					]
																																				}
																																			],
																																			"sources": [
																																				{
																																					"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																																					"line": 45,
																																					"character": 38
																																				}
																																			]
																																		}
																																	},
																																	{
																																		"type": "reflection",
																																		"declaration": {
																																			"id": 695,
																																			"name": "__type",
																																			"variant": "declaration",
																																			"kind": 65536,
																																			"flags": {},
																																			"children": [
																																				{
																																					"id": 696,
																																					"name": "address",
																																					"variant": "declaration",
																																					"kind": 1024,
																																					"flags": {},
																																					"sources": [
																																						{
																																							"fileName": "src/auth/db.ts",
																																							"line": 8,
																																							"character": 6,
																																							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L8"
																																						}
																																					],
																																					"type": {
																																						"type": "unknown",
																																						"name": "..."
																																					},
																																					"defaultValue": "..."
																																				},
																																				{
																																					"id": 697,
																																					"name": "verified",
																																					"variant": "declaration",
																																					"kind": 1024,
																																					"flags": {},
																																					"sources": [
																																						{
																																							"fileName": "src/auth/db.ts",
																																							"line": 9,
																																							"character": 6,
																																							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L9"
																																						}
																																					],
																																					"type": {
																																						"type": "unknown",
																																						"name": "..."
																																					},
																																					"defaultValue": "..."
																																				}
																																			],
																																			"groups": [
																																				{
																																					"title": "Properties",
																																					"children": [
																																						696,
																																						697
																																					]
																																				}
																																			],
																																			"sources": [
																																				{
																																					"fileName": "node_modules/zod/dist/types/v3/helpers/util.d.ts",
																																					"line": 45,
																																					"character": 38
																																				}
																																			]
																																		}
																																	}
																																],
																																"name": "ZodObject",
																																"package": "zod"
																															},
																															{
																																"type": "literal",
																																"value": "many"
																															}
																														],
																														"name": "ZodArray",
																														"package": "zod"
																													}
																												],
																												"name": "ZodOptional",
																												"package": "zod"
																											},
																											"defaultValue": "..."
																										},
																										{
																											"id": 698,
																											"name": "handle",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {},
																											"sources": [
																												{
																													"fileName": "src/auth/db.ts",
																													"line": 6,
																													"character": 4,
																													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L6"
																												}
																											],
																											"type": {
																												"type": "reference",
																												"target": {
																													"packageName": "zod",
																													"packagePath": "dist/types/v3/types.d.ts",
																													"qualifiedName": "ZodString"
																												},
																												"name": "ZodString",
																												"package": "zod"
																											},
																											"defaultValue": "..."
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												669,
																												687,
																												688,
																												698
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "src/auth/db.ts",
																											"line": 5,
																											"character": 10,
																											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/auth/db.ts#L5"
																										}
																									]
																								}
																							}
																						],
																						"name": "InferDocumentType",
																						"package": "modelence"
																					},
																					{
																						"type": "union",
																						"types": [
																							{
																								"type": "literal",
																								"value": "handle"
																							},
																							{
																								"type": "literal",
																								"value": "createdAt"
																							},
																							{
																								"type": "literal",
																								"value": "emails"
																							},
																							{
																								"type": "literal",
																								"value": "authMethods"
																							}
																						]
																					}
																				],
																				"name": "Pick",
																				"package": "typescript"
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 699,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "node_modules/mongodb/mongodb.d.ts",
																							"line": 8786,
																							"character": 69
																						}
																					]
																				}
																			}
																		]
																	}
																},
																{
																	"id": 700,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "unknown"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "Store",
								"package": "modelence"
							},
							"defaultValue": "..."
						},
						{
							"id": 701,
							"name": "schema",
							"variant": "declaration",
							"kind": 32,
							"flags": {
								"isConst": true
							},
							"sources": [
								{
									"fileName": "src/data/types.ts",
									"line": 31,
									"character": 13,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L31"
								},
								{
									"fileName": "src/data/types.ts",
									"line": 64,
									"character": 17,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L64"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 702,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 703,
											"name": "array",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "src/data/types.ts",
													"line": 36,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L36"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 704,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
															"line": 999,
															"character": 25
														}
													],
													"signatures": [
														{
															"id": 705,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
																	"line": 999,
																	"character": 25
																}
															],
															"typeParameters": [
																{
																	"id": 706,
																	"name": "El",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "zod",
																			"packagePath": "dist/types/v3/types.d.ts",
																			"qualifiedName": "ZodTypeAny"
																		},
																		"name": "ZodTypeAny",
																		"package": "zod"
																	}
																}
															],
															"parameters": [
																{
																	"id": 707,
																	"name": "schema",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 706,
																		"name": "El",
																		"package": "zod",
																		"refersToTypeParameter": true
																	}
																},
																{
																	"id": 708,
																	"name": "params",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "zod",
																			"packagePath": "dist/types/v3/types.d.ts",
																			"qualifiedName": "RawCreateParams"
																		},
																		"name": "RawCreateParams",
																		"package": "zod"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "zod",
																	"packagePath": "dist/types/v3/types.d.ts",
																	"qualifiedName": "ZodArray"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 706,
																		"name": "El",
																		"package": "zod",
																		"refersToTypeParameter": true
																	}
																],
																"name": "ZodArray",
																"package": "zod"
															}
														}
													]
												}
											},
											"defaultValue": "schemaArray"
										},
										{
											"id": 709,
											"name": "boolean",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "src/data/types.ts",
													"line": 35,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L35"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 710,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
															"line": 986,
															"character": 27
														}
													],
													"signatures": [
														{
															"id": 711,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
																	"line": 986,
																	"character": 27
																}
															],
															"parameters": [
																{
																	"id": 712,
																	"name": "params",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 713,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
																							"line": 26,
																							"character": 30
																						}
																					]
																				}
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 714,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
																							"line": 986,
																							"character": 55
																						}
																					]
																				}
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "zod",
																	"packagePath": "dist/types/v3/types.d.ts",
																	"qualifiedName": "ZodBoolean"
																},
																"name": "ZodBoolean",
																"package": "zod"
															}
														}
													]
												}
											},
											"defaultValue": "schemaBoolean"
										},
										{
											"id": 715,
											"name": "date",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "src/data/types.ts",
													"line": 34,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L34"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 716,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
															"line": 989,
															"character": 24
														}
													],
													"signatures": [
														{
															"id": 717,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
																	"line": 989,
																	"character": 24
																}
															],
															"parameters": [
																{
																	"id": 718,
																	"name": "params",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 719,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
																							"line": 26,
																							"character": 30
																						}
																					]
																				}
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 720,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
																							"line": 989,
																							"character": 52
																						}
																					]
																				}
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "zod",
																	"packagePath": "dist/types/v3/types.d.ts",
																	"qualifiedName": "ZodDate"
																},
																"name": "ZodDate",
																"package": "zod"
															}
														}
													]
												}
											},
											"defaultValue": "schemaDate"
										},
										{
											"id": 721,
											"name": "enum",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "src/data/types.ts",
													"line": 38,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L38"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 722,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
															"line": 760,
															"character": 17
														},
														{
															"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
															"line": 761,
															"character": 17
														}
													],
													"signatures": [
														{
															"id": 723,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
																	"line": 760,
																	"character": 17
																}
															],
															"typeParameters": [
																{
																	"id": 724,
																	"name": "U",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 725,
																	"name": "T",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {},
																	"type": {
																		"type": "typeOperator",
																		"operator": "readonly",
																		"target": {
																			"type": "tuple",
																			"elements": [
																				{
																					"type": "reference",
																					"target": 724,
																					"name": "U",
																					"package": "zod",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 724,
																					"name": "U",
																					"package": "zod",
																					"refersToTypeParameter": true
																				}
																			]
																		}
																	}
																}
															],
															"parameters": [
																{
																	"id": 726,
																	"name": "values",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 725,
																		"name": "T",
																		"package": "zod",
																		"refersToTypeParameter": true
																	}
																},
																{
																	"id": 727,
																	"name": "params",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "zod",
																			"packagePath": "dist/types/v3/types.d.ts",
																			"qualifiedName": "RawCreateParams"
																		},
																		"name": "RawCreateParams",
																		"package": "zod"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "zod",
																	"packagePath": "dist/types/v3/types.d.ts",
																	"qualifiedName": "ZodEnum"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "zod",
																			"packagePath": "dist/types/v3/types.d.ts",
																			"qualifiedName": "Writeable"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 725,
																				"name": "T",
																				"package": "zod",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "Writeable",
																		"package": "zod"
																	}
																],
																"name": "ZodEnum",
																"package": "zod"
															}
														},
														{
															"id": 728,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
																	"line": 761,
																	"character": 17
																}
															],
															"typeParameters": [
																{
																	"id": 729,
																	"name": "U",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 730,
																	"name": "T",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {},
																	"type": {
																		"type": "tuple",
																		"elements": [
																			{
																				"type": "reference",
																				"target": 729,
																				"name": "U",
																				"package": "zod",
																				"refersToTypeParameter": true
																			},
																			{
																				"type": "rest",
																				"elementType": {
																					"type": "array",
																					"elementType": {
																						"type": "reference",
																						"target": 729,
																						"name": "U",
																						"package": "zod",
																						"refersToTypeParameter": true
																					}
																				}
																			}
																		]
																	}
																}
															],
															"parameters": [
																{
																	"id": 731,
																	"name": "values",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 730,
																		"name": "T",
																		"package": "zod",
																		"refersToTypeParameter": true
																	}
																},
																{
																	"id": 732,
																	"name": "params",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "zod",
																			"packagePath": "dist/types/v3/types.d.ts",
																			"qualifiedName": "RawCreateParams"
																		},
																		"name": "RawCreateParams",
																		"package": "zod"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "zod",
																	"packagePath": "dist/types/v3/types.d.ts",
																	"qualifiedName": "ZodEnum"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 730,
																		"name": "T",
																		"package": "zod",
																		"refersToTypeParameter": true
																	}
																],
																"name": "ZodEnum",
																"package": "zod"
															}
														}
													]
												}
											},
											"defaultValue": "schemaEnum"
										},
										{
											"id": 733,
											"name": "number",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "src/data/types.ts",
													"line": 33,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L33"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 734,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
															"line": 979,
															"character": 26
														}
													],
													"signatures": [
														{
															"id": 735,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
																	"line": 979,
																	"character": 26
																}
															],
															"parameters": [
																{
																	"id": 736,
																	"name": "params",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 737,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
																							"line": 26,
																							"character": 30
																						}
																					]
																				}
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 738,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
																							"line": 979,
																							"character": 54
																						}
																					]
																				}
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "zod",
																	"packagePath": "dist/types/v3/types.d.ts",
																	"qualifiedName": "ZodNumber"
																},
																"name": "ZodNumber",
																"package": "zod"
															}
														}
													]
												}
											},
											"defaultValue": "schemaNumber"
										},
										{
											"id": 739,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "src/data/types.ts",
													"line": 37,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L37"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 740,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
															"line": 1000,
															"character": 26
														}
													],
													"signatures": [
														{
															"id": 741,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
																	"line": 1000,
																	"character": 26
																}
															],
															"typeParameters": [
																{
																	"id": 742,
																	"name": "Shape",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "zod",
																			"packagePath": "dist/types/v3/types.d.ts",
																			"qualifiedName": "ZodRawShape"
																		},
																		"name": "ZodRawShape",
																		"package": "zod"
																	}
																}
															],
															"parameters": [
																{
																	"id": 743,
																	"name": "shape",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 742,
																		"name": "Shape",
																		"package": "zod",
																		"refersToTypeParameter": true
																	}
																},
																{
																	"id": 744,
																	"name": "params",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "zod",
																			"packagePath": "dist/types/v3/types.d.ts",
																			"qualifiedName": "RawCreateParams"
																		},
																		"name": "RawCreateParams",
																		"package": "zod"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "zod",
																	"packagePath": "dist/types/v3/types.d.ts",
																	"qualifiedName": "ZodObject"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 742,
																		"name": "Shape",
																		"package": "zod",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "literal",
																		"value": "strip"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"packageName": "zod",
																			"packagePath": "dist/types/v3/types.d.ts",
																			"qualifiedName": "ZodTypeAny"
																		},
																		"name": "ZodTypeAny",
																		"package": "zod"
																	},
																	{
																		"type": "mapped",
																		"parameter": "k",
																		"parameterType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				},
																				{
																					"type": "intrinsic",
																					"name": "symbol"
																				}
																			]
																		},
																		"templateType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": {
																					"packageName": "zod",
																					"packagePath": "dist/types/v3/helpers/util.d.ts",
																					"qualifiedName": "k"
																				},
																				"name": "k",
																				"package": "zod",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": {
																					"packageName": "zod",
																					"packagePath": "dist/types/v3/helpers/util.d.ts",
																					"qualifiedName": "objectUtil.addQuestionMarks"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"packageName": "zod",
																							"packagePath": "dist/types/v3/types.d.ts",
																							"qualifiedName": "baseObjectOutputType"
																						},
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": 742,
																								"name": "Shape",
																								"package": "zod",
																								"refersToTypeParameter": true
																							}
																						],
																						"name": "baseObjectOutputType",
																						"package": "zod"
																					},
																					{
																						"type": "intrinsic",
																						"name": "any"
																					}
																				],
																				"name": "addQuestionMarks",
																				"package": "zod",
																				"qualifiedName": "objectUtil.addQuestionMarks"
																			}
																		}
																	},
																	{
																		"type": "mapped",
																		"parameter": "k",
																		"parameterType": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				},
																				{
																					"type": "intrinsic",
																					"name": "symbol"
																				}
																			]
																		},
																		"templateType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": {
																					"packageName": "zod",
																					"packagePath": "dist/types/v3/helpers/util.d.ts",
																					"qualifiedName": "k"
																				},
																				"name": "k",
																				"package": "zod",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": {
																					"packageName": "zod",
																					"packagePath": "dist/types/v3/types.d.ts",
																					"qualifiedName": "baseObjectInputType"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 742,
																						"name": "Shape",
																						"package": "zod",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "baseObjectInputType",
																				"package": "zod"
																			}
																		}
																	}
																],
																"name": "ZodObject",
																"package": "zod"
															}
														}
													]
												}
											},
											"defaultValue": "schemaObject"
										},
										{
											"id": 745,
											"name": "string",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "src/data/types.ts",
													"line": 32,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L32"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 746,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
															"line": 976,
															"character": 26
														}
													],
													"signatures": [
														{
															"id": 747,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
																	"line": 976,
																	"character": 26
																}
															],
															"parameters": [
																{
																	"id": 748,
																	"name": "params",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 749,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
																							"line": 26,
																							"character": 30
																						}
																					]
																				}
																			},
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 750,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
																							"line": 976,
																							"character": 54
																						}
																					]
																				}
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "zod",
																	"packagePath": "dist/types/v3/types.d.ts",
																	"qualifiedName": "ZodString"
																},
																"name": "ZodString",
																"package": "zod"
															}
														}
													]
												}
											},
											"defaultValue": "schemaString"
										},
										{
											"id": 751,
											"name": "union",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "src/data/types.ts",
													"line": 48,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L48"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 752,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
															"line": 1002,
															"character": 25
														}
													],
													"signatures": [
														{
															"id": 753,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "node_modules/zod/dist/types/v3/types.d.ts",
																	"line": 1002,
																	"character": 25
																}
															],
															"typeParameters": [
																{
																	"id": 754,
																	"name": "Options",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {},
																	"type": {
																		"type": "typeOperator",
																		"operator": "readonly",
																		"target": {
																			"type": "tuple",
																			"elements": [
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "zod",
																						"packagePath": "dist/types/v3/types.d.ts",
																						"qualifiedName": "ZodTypeAny"
																					},
																					"name": "ZodTypeAny",
																					"package": "zod"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "zod",
																						"packagePath": "dist/types/v3/types.d.ts",
																						"qualifiedName": "ZodTypeAny"
																					},
																					"name": "ZodTypeAny",
																					"package": "zod"
																				},
																				{
																					"type": "reference",
																					"target": {
																						"packageName": "zod",
																						"packagePath": "dist/types/v3/types.d.ts",
																						"qualifiedName": "ZodTypeAny"
																					},
																					"name": "ZodTypeAny",
																					"package": "zod"
																				}
																			]
																		}
																	}
																}
															],
															"parameters": [
																{
																	"id": 755,
																	"name": "types",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 754,
																		"name": "Options",
																		"package": "zod",
																		"refersToTypeParameter": true
																	}
																},
																{
																	"id": 756,
																	"name": "params",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"packageName": "zod",
																			"packagePath": "dist/types/v3/types.d.ts",
																			"qualifiedName": "RawCreateParams"
																		},
																		"name": "RawCreateParams",
																		"package": "zod"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "zod",
																	"packagePath": "dist/types/v3/types.d.ts",
																	"qualifiedName": "ZodUnion"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 754,
																		"name": "Options",
																		"package": "zod",
																		"refersToTypeParameter": true
																	}
																],
																"name": "ZodUnion",
																"package": "zod"
															}
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 757,
											"name": "infer",
											"variant": "declaration",
											"kind": 2048,
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "src/data/types.ts",
													"line": 49,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L49"
												}
											],
											"signatures": [
												{
													"id": 758,
													"name": "infer",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "src/data/types.ts",
															"line": 49,
															"character": 2,
															"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L49"
														}
													],
													"typeParameters": [
														{
															"id": 759,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"packageName": "modelence",
																	"packagePath": "src/data/types.ts",
																	"qualifiedName": "SchemaTypeDefinition"
																},
																"name": "SchemaTypeDefinition",
																"package": "modelence"
															}
														}
													],
													"parameters": [
														{
															"id": 760,
															"name": "schema",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 759,
																"name": "T",
																"package": "modelence",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "modelence",
															"packagePath": "src/data/types.ts",
															"qualifiedName": "InferDocumentType"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 759,
																"name": "T",
																"package": "modelence",
																"refersToTypeParameter": true
															}
														],
														"name": "InferDocumentType",
														"package": "modelence"
													}
												}
											]
										},
										{
											"id": 761,
											"name": "objectId",
											"variant": "declaration",
											"kind": 2048,
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "src/data/types.ts",
													"line": 39,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L39"
												}
											],
											"signatures": [
												{
													"id": 762,
													"name": "objectId",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "src/data/types.ts",
															"line": 39,
															"character": 2,
															"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L39"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "zod",
															"packagePath": "dist/types/v3/types.d.ts",
															"qualifiedName": "ZodType"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "bson",
																	"packagePath": "bson.d.ts",
																	"qualifiedName": "ObjectId"
																},
																"name": "ObjectId",
																"package": "bson"
															}
														],
														"name": "ZodType",
														"package": "zod"
													}
												}
											]
										},
										{
											"id": 763,
											"name": "ref",
											"variant": "declaration",
											"kind": 2048,
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "src/data/types.ts",
													"line": 45,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L45"
												}
											],
											"signatures": [
												{
													"id": 764,
													"name": "ref",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "src/data/types.ts",
															"line": 45,
															"character": 2,
															"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L45"
														}
													],
													"parameters": [
														{
															"id": 765,
															"name": "collection",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": 488,
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "any"
																			},
																			{
																				"type": "intrinsic",
																				"name": "any"
																			}
																		],
																		"name": "Store",
																		"package": "modelence"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "zod",
															"packagePath": "dist/types/v3/types.d.ts",
															"qualifiedName": "ZodType"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "bson",
																	"packagePath": "bson.d.ts",
																	"qualifiedName": "ObjectId"
																},
																"name": "ObjectId",
																"package": "bson"
															}
														],
														"name": "ZodType",
														"package": "zod"
													}
												}
											]
										},
										{
											"id": 766,
											"name": "userId",
											"variant": "declaration",
											"kind": 2048,
											"flags": {
												"isReadonly": true
											},
											"sources": [
												{
													"fileName": "src/data/types.ts",
													"line": 42,
													"character": 2,
													"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L42"
												}
											],
											"signatures": [
												{
													"id": 767,
													"name": "userId",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "src/data/types.ts",
															"line": 42,
															"character": 2,
															"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L42"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"packageName": "zod",
															"packagePath": "dist/types/v3/types.d.ts",
															"qualifiedName": "ZodType"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"packageName": "bson",
																	"packagePath": "bson.d.ts",
																	"qualifiedName": "ObjectId"
																},
																"name": "ObjectId",
																"package": "bson"
															}
														],
														"name": "ZodType",
														"package": "zod"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												703,
												709,
												715,
												721,
												733,
												739,
												745,
												751
											]
										},
										{
											"title": "Methods",
											"children": [
												757,
												761,
												763,
												766
											]
										}
									],
									"sources": [
										{
											"fileName": "src/data/types.ts",
											"line": 31,
											"character": 22,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/data/types.ts#L31"
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 768,
							"name": "createQuery",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "src/methods/index.ts",
									"line": 8,
									"character": 16,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/methods/index.ts#L8"
								}
							],
							"signatures": [
								{
									"id": 769,
									"name": "createQuery",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/methods/index.ts",
											"line": 8,
											"character": 16,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/methods/index.ts#L8"
										}
									],
									"typeParameters": [
										{
											"id": 770,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"parameters": [
										{
											"id": 771,
											"name": "name",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 772,
											"name": "methodDef",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "modelence",
													"packagePath": "src/methods/types.ts",
													"qualifiedName": "MethodDefinition"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 770,
														"name": "T",
														"package": "modelence",
														"refersToTypeParameter": true
													}
												],
												"name": "MethodDefinition",
												"package": "modelence"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 773,
							"name": "getConfig",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "src/config/server.ts",
									"line": 7,
									"character": 16,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/config/server.ts#L7"
								}
							],
							"signatures": [
								{
									"id": 774,
									"name": "getConfig",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/config/server.ts",
											"line": 7,
											"character": 16,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/config/server.ts#L7"
										}
									],
									"parameters": [
										{
											"id": 775,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										]
									}
								}
							]
						},
						{
							"id": 776,
							"name": "startApp",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "src/app/index.ts",
									"line": 32,
									"character": 22,
									"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/app/index.ts#L32"
								}
							],
							"signatures": [
								{
									"id": 777,
									"name": "startApp",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "src/app/index.ts",
											"line": 32,
											"character": 22,
											"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/app/index.ts#L32"
										}
									],
									"parameters": [
										{
											"id": 778,
											"name": "__namedParameters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"packageName": "modelence",
													"packagePath": "src/app/index.ts",
													"qualifiedName": "AppOptions"
												},
												"name": "AppOptions",
												"package": "modelence"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"packageName": "typescript",
											"packagePath": "lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								473
							]
						},
						{
							"title": "Classes",
							"children": [
								476,
								488
							],
							"categories": [
								{
									"title": "Store",
									"children": [
										488
									]
								},
								{
									"title": "Module",
									"children": [
										476
									]
								}
							]
						},
						{
							"title": "Type Aliases",
							"children": [
								595,
								596,
								597,
								601,
								606,
								613,
								618
							]
						},
						{
							"title": "Variables",
							"children": [
								621,
								701
							]
						},
						{
							"title": "Functions",
							"children": [
								768,
								773,
								776
							]
						}
					],
					"categories": [
						{
							"title": "Module",
							"children": [
								476
							]
						},
						{
							"title": "Other",
							"children": [
								473,
								595,
								596,
								597,
								601,
								606,
								613,
								618,
								621,
								701,
								768,
								773,
								776
							]
						},
						{
							"title": "Store",
							"children": [
								488
							]
						}
					],
					"sources": [
						{
							"fileName": "src/server.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/modelence/modelence/blob/61d04a88a83d040a242a4c6c5b3a326dc26ad36c/packages/modelence/src/server.ts#L1"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Modules",
					"children": [
						432,
						472
					]
				}
			],
			"readme": [
				{
					"kind": "text",
					"text": "<div align=\"center\">\n  <a href=\"https://modelence.com\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"/packages/modelence/static/modelence.png\">\n      <img alt=\"Modelence logo\" src=\"/packages/modelence/static/modelence.png\" height=\"128\">\n    </picture>\n  </a>\n  <h1>Modelence</h1>\n  \n  [Documentation](https://docs.modelence.com) | [API Reference](https://docs.modelence.com/api-reference/intro)\n\n  ![Build Status](https://github.com/modelence/modelence/actions/workflows/build.yml/badge.svg)\n  <a href=\"https://www.npmjs.com/package/modelence\"><img alt=\"NPM version\" src=\"https://img.shields.io/npm/v/modelence.svg\"></a>\n</div>\n\n## Getting Started\nModelence is a full-stack TypeScript Framework for real-time MongoDB applications, with the mission to eliminate all boilerplate for most standard features that modern web applications need, like database access, authentication, AI integration and more.\n\n- Visit our [Quick Start Guide](https://docs.modelence.com/quick-start/intro) to get started with Modelence."
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				809,
				779,
				431
			]
		}
	],
	"packageName": "modelence-project",
	"packageVersion": "0.0.0",
	"symbolIdMap": {
		"432": {
			"packageName": "modelence",
			"packagePath": "src/client.ts",
			"qualifiedName": ""
		},
		"433": {
			"packageName": "modelence",
			"packagePath": "src/client/method.ts",
			"qualifiedName": "MethodArgs"
		},
		"434": {
			"packageName": "modelence",
			"packagePath": "src/auth/client/index.ts",
			"qualifiedName": "UserInfo"
		},
		"435": {
			"packageName": "modelence",
			"packagePath": "src/auth/client/index.ts",
			"qualifiedName": "__type.handle"
		},
		"436": {
			"packageName": "modelence",
			"packagePath": "src/auth/client/index.ts",
			"qualifiedName": "__type.id"
		},
		"437": {
			"packageName": "modelence",
			"packagePath": "src/client.ts",
			"qualifiedName": "AppProvider"
		},
		"438": {
			"packageName": "modelence",
			"packagePath": "src/client/method.ts",
			"qualifiedName": "callMethod"
		},
		"439": {
			"packageName": "modelence",
			"packagePath": "src/client/method.ts",
			"qualifiedName": "callMethod"
		},
		"440": {
			"packageName": "modelence",
			"packagePath": "src/client/method.ts",
			"qualifiedName": "T"
		},
		"441": {
			"packageName": "modelence",
			"packagePath": "src/client/method.ts",
			"qualifiedName": "methodName"
		},
		"442": {
			"packageName": "modelence",
			"packagePath": "src/client/method.ts",
			"qualifiedName": "args"
		},
		"443": {
			"packageName": "modelence",
			"packagePath": "src/config/client.ts",
			"qualifiedName": "getConfig"
		},
		"444": {
			"packageName": "modelence",
			"packagePath": "src/config/client.ts",
			"qualifiedName": "getConfig"
		},
		"445": {
			"packageName": "modelence",
			"packagePath": "src/config/client.ts",
			"qualifiedName": "key"
		},
		"446": {
			"packageName": "modelence",
			"packagePath": "src/auth/client/index.ts",
			"qualifiedName": "loginWithPassword"
		},
		"447": {
			"packageName": "modelence",
			"packagePath": "src/auth/client/index.ts",
			"qualifiedName": "loginWithPassword"
		},
		"448": {
			"packageName": "modelence",
			"packagePath": "src/auth/client/index.ts",
			"qualifiedName": "__0"
		},
		"449": {
			"packageName": "modelence",
			"packagePath": "src/auth/client/index.ts",
			"qualifiedName": "__type"
		},
		"450": {
			"packageName": "modelence",
			"packagePath": "src/auth/client/index.ts",
			"qualifiedName": "__type.email"
		},
		"451": {
			"packageName": "modelence",
			"packagePath": "src/auth/client/index.ts",
			"qualifiedName": "__type.password"
		},
		"452": {
			"packageName": "modelence",
			"packagePath": "src/auth/client/index.ts",
			"qualifiedName": "logout"
		},
		"453": {
			"packageName": "modelence",
			"packagePath": "src/auth/client/index.ts",
			"qualifiedName": "logout"
		},
		"454": {
			"packageName": "modelence",
			"packagePath": "src/client/renderApp.tsx",
			"qualifiedName": "renderApp"
		},
		"455": {
			"packageName": "modelence",
			"packagePath": "src/client/renderApp.tsx",
			"qualifiedName": "renderApp"
		},
		"456": {
			"packageName": "modelence",
			"packagePath": "src/client/renderApp.tsx",
			"qualifiedName": "__0"
		},
		"457": {
			"packageName": "modelence",
			"packagePath": "src/client/renderApp.tsx",
			"qualifiedName": "__type"
		},
		"458": {
			"packageName": "modelence",
			"packagePath": "src/client/renderApp.tsx",
			"qualifiedName": "__type.errorHandler"
		},
		"459": {
			"packageName": "modelence",
			"packagePath": "src/client/renderApp.tsx",
			"qualifiedName": "__type.favicon"
		},
		"460": {
			"packageName": "modelence",
			"packagePath": "src/client/renderApp.tsx",
			"qualifiedName": "__type.loadingElement"
		},
		"461": {
			"packageName": "modelence",
			"packagePath": "src/client/renderApp.tsx",
			"qualifiedName": "__type.routesElement"
		},
		"462": {
			"packageName": "modelence",
			"packagePath": "src/auth/client/index.ts",
			"qualifiedName": "signupWithPassword"
		},
		"463": {
			"packageName": "modelence",
			"packagePath": "src/auth/client/index.ts",
			"qualifiedName": "signupWithPassword"
		},
		"464": {
			"packageName": "modelence",
			"packagePath": "src/auth/client/index.ts",
			"qualifiedName": "__0"
		},
		"465": {
			"packageName": "modelence",
			"packagePath": "src/auth/client/index.ts",
			"qualifiedName": "__type"
		},
		"466": {
			"packageName": "modelence",
			"packagePath": "src/auth/client/index.ts",
			"qualifiedName": "__type.email"
		},
		"467": {
			"packageName": "modelence",
			"packagePath": "src/auth/client/index.ts",
			"qualifiedName": "__type.password"
		},
		"468": {
			"packageName": "modelence",
			"packagePath": "src/client/session.ts",
			"qualifiedName": "useSession"
		},
		"469": {
			"packageName": "modelence",
			"packagePath": "src/client/session.ts",
			"qualifiedName": "useSession"
		},
		"470": {
			"packageName": "modelence",
			"packagePath": "src/client/session.ts",
			"qualifiedName": "__object"
		},
		"471": {
			"packageName": "modelence",
			"packagePath": "src/client/session.ts",
			"qualifiedName": "__object.user"
		},
		"472": {
			"packageName": "modelence",
			"packagePath": "src/server.ts",
			"qualifiedName": ""
		},
		"473": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "schema"
		},
		"474": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "schema.infer"
		},
		"475": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "T"
		},
		"476": {
			"packageName": "modelence",
			"packagePath": "src/app/module.ts",
			"qualifiedName": "Module"
		},
		"477": {
			"packageName": "modelence",
			"packagePath": "src/app/module.ts",
			"qualifiedName": "Module.__constructor"
		},
		"478": {
			"packageName": "modelence",
			"packagePath": "src/app/module.ts",
			"qualifiedName": "Module"
		},
		"479": {
			"packageName": "modelence",
			"packagePath": "src/app/module.ts",
			"qualifiedName": "name"
		},
		"480": {
			"packageName": "modelence",
			"packagePath": "src/app/module.ts",
			"qualifiedName": "__1"
		},
		"481": {
			"packageName": "modelence",
			"packagePath": "src/app/module.ts",
			"qualifiedName": "__type"
		},
		"482": {
			"packageName": "modelence",
			"packagePath": "src/app/module.ts",
			"qualifiedName": "__type.configSchema"
		},
		"483": {
			"packageName": "modelence",
			"packagePath": "src/app/module.ts",
			"qualifiedName": "__type.cronJobs"
		},
		"484": {
			"packageName": "modelence",
			"packagePath": "src/app/module.ts",
			"qualifiedName": "__type.mutations"
		},
		"485": {
			"packageName": "modelence",
			"packagePath": "src/app/module.ts",
			"qualifiedName": "__type.queries"
		},
		"486": {
			"packageName": "modelence",
			"packagePath": "src/app/module.ts",
			"qualifiedName": "__type.routes"
		},
		"487": {
			"packageName": "modelence",
			"packagePath": "src/app/module.ts",
			"qualifiedName": "__type.stores"
		},
		"488": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store"
		},
		"489": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.__constructor"
		},
		"490": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store"
		},
		"491": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.TSchema"
		},
		"492": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.TMethods"
		},
		"493": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type"
		},
		"494": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type"
		},
		"495": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "this"
		},
		"496": {
			"packageName": "mongodb",
			"packagePath": "mongodb.d.ts",
			"qualifiedName": "__type"
		},
		"497": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "args"
		},
		"498": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "name"
		},
		"499": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "options"
		},
		"500": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type"
		},
		"501": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type.indexes"
		},
		"502": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type.methods"
		},
		"503": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type.schema"
		},
		"504": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.Doc"
		},
		"505": {
			"packageName": "mongodb",
			"packagePath": "mongodb.d.ts",
			"qualifiedName": "__type"
		},
		"506": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.aggregate"
		},
		"507": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.aggregate"
		},
		"508": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "pipeline"
		},
		"509": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "options"
		},
		"510": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.bulkWrite"
		},
		"511": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.bulkWrite"
		},
		"512": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "operations"
		},
		"513": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.deleteMany"
		},
		"514": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.deleteMany"
		},
		"515": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "selector"
		},
		"516": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.deleteOne"
		},
		"517": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.deleteOne"
		},
		"518": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "selector"
		},
		"519": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.fetch"
		},
		"520": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.fetch"
		},
		"521": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "query"
		},
		"522": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "options"
		},
		"523": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type"
		},
		"524": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type.limit"
		},
		"525": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type.skip"
		},
		"526": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type.sort"
		},
		"527": {
			"packageName": "mongodb",
			"packagePath": "mongodb.d.ts",
			"qualifiedName": "__type"
		},
		"528": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.findById"
		},
		"529": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.findById"
		},
		"530": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "id"
		},
		"531": {
			"packageName": "mongodb",
			"packagePath": "mongodb.d.ts",
			"qualifiedName": "__type"
		},
		"532": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.findOne"
		},
		"533": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.findOne"
		},
		"534": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "query"
		},
		"535": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "options"
		},
		"536": {
			"packageName": "mongodb",
			"packagePath": "mongodb.d.ts",
			"qualifiedName": "__type"
		},
		"537": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.getDatabase"
		},
		"538": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.getDatabase"
		},
		"539": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.getName"
		},
		"540": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.getName"
		},
		"541": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.insertMany"
		},
		"542": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.insertMany"
		},
		"543": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "documents"
		},
		"544": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.insertOne"
		},
		"545": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.insertOne"
		},
		"546": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "document"
		},
		"547": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.rawCollection"
		},
		"548": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.rawCollection"
		},
		"549": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.renameFrom"
		},
		"550": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.renameFrom"
		},
		"551": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "oldName"
		},
		"552": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "options"
		},
		"553": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type"
		},
		"554": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type.session"
		},
		"555": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.requireById"
		},
		"556": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.requireById"
		},
		"557": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "id"
		},
		"558": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "errorHandler"
		},
		"559": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type"
		},
		"560": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type"
		},
		"561": {
			"packageName": "mongodb",
			"packagePath": "mongodb.d.ts",
			"qualifiedName": "__type"
		},
		"562": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.requireOne"
		},
		"563": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.requireOne"
		},
		"564": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "query"
		},
		"565": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "options"
		},
		"566": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "errorHandler"
		},
		"567": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type"
		},
		"568": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type"
		},
		"569": {
			"packageName": "mongodb",
			"packagePath": "mongodb.d.ts",
			"qualifiedName": "__type"
		},
		"570": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.updateMany"
		},
		"571": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.updateMany"
		},
		"572": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "selector"
		},
		"573": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "update"
		},
		"574": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "options"
		},
		"575": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type"
		},
		"576": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type.session"
		},
		"577": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.updateOne"
		},
		"578": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.updateOne"
		},
		"579": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "selector"
		},
		"580": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "update"
		},
		"581": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.upsertMany"
		},
		"582": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.upsertMany"
		},
		"583": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "selector"
		},
		"584": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "update"
		},
		"585": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.upsertOne"
		},
		"586": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.upsertOne"
		},
		"587": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "selector"
		},
		"588": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "update"
		},
		"589": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.TSchema"
		},
		"590": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "Store.TMethods"
		},
		"591": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type"
		},
		"592": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type"
		},
		"593": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "this"
		},
		"594": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "args"
		},
		"595": {
			"packageName": "modelence",
			"packagePath": "src/app/backendApi.ts",
			"qualifiedName": "CloudBackendConnectResponse"
		},
		"596": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "HttpMethod"
		},
		"597": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "RouteDefinition"
		},
		"598": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "__type.errorHandler"
		},
		"599": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "__type.handlers"
		},
		"600": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "__type.path"
		},
		"601": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "RouteHandler"
		},
		"602": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "T"
		},
		"603": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "__type"
		},
		"604": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "__type"
		},
		"605": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "params"
		},
		"606": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "RouteParams"
		},
		"607": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "__type.body"
		},
		"608": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "__type.cookies"
		},
		"609": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "__type.headers"
		},
		"610": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "__type.params"
		},
		"611": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "__type.query"
		},
		"612": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "__type.req"
		},
		"613": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "RouteResponse"
		},
		"614": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "__type.data"
		},
		"615": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "__type.headers"
		},
		"616": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "__type.status"
		},
		"617": {
			"packageName": "modelence",
			"packagePath": "src/routes/types.ts",
			"qualifiedName": "T"
		},
		"618": {
			"packageName": "modelence",
			"packagePath": "src/auth/types.ts",
			"qualifiedName": "UserInfo"
		},
		"619": {
			"packageName": "modelence",
			"packagePath": "src/auth/types.ts",
			"qualifiedName": "__type.handle"
		},
		"620": {
			"packageName": "modelence",
			"packagePath": "src/auth/types.ts",
			"qualifiedName": "__type.id"
		},
		"621": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "usersCollection"
		},
		"622": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object"
		},
		"623": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object.authMethods"
		},
		"624": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object"
		},
		"625": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object.google"
		},
		"626": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object"
		},
		"627": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object.id"
		},
		"628": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"629": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "id"
		},
		"630": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"631": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "id"
		},
		"632": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object.password"
		},
		"633": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object"
		},
		"634": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object.hash"
		},
		"635": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"636": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "hash"
		},
		"637": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"638": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "hash"
		},
		"639": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"640": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "google"
		},
		"641": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"642": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "id"
		},
		"643": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "password"
		},
		"644": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"645": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "hash"
		},
		"646": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"647": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "google"
		},
		"648": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"649": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "id"
		},
		"650": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "password"
		},
		"651": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"652": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "hash"
		},
		"653": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object.createdAt"
		},
		"654": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object.emails"
		},
		"655": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object"
		},
		"656": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object.address"
		},
		"657": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object.verified"
		},
		"658": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"659": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "address"
		},
		"660": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "verified"
		},
		"661": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"662": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "address"
		},
		"663": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "verified"
		},
		"664": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object.handle"
		},
		"665": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type"
		},
		"666": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "__type"
		},
		"667": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "this"
		},
		"668": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object"
		},
		"669": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object.authMethods"
		},
		"670": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object"
		},
		"671": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object.google"
		},
		"672": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object.password"
		},
		"673": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"674": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "google"
		},
		"675": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"676": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "id"
		},
		"677": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "password"
		},
		"678": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"679": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "hash"
		},
		"680": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"681": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "google"
		},
		"682": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"683": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "id"
		},
		"684": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "password"
		},
		"685": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"686": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "hash"
		},
		"687": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object.createdAt"
		},
		"688": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object.emails"
		},
		"689": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object"
		},
		"690": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object.address"
		},
		"691": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object.verified"
		},
		"692": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"693": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "address"
		},
		"694": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "verified"
		},
		"695": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"696": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "address"
		},
		"697": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "verified"
		},
		"698": {
			"packageName": "modelence",
			"packagePath": "src/auth/db.ts",
			"qualifiedName": "__object.handle"
		},
		"699": {
			"packageName": "mongodb",
			"packagePath": "mongodb.d.ts",
			"qualifiedName": "__type"
		},
		"700": {
			"packageName": "modelence",
			"packagePath": "src/data/store.ts",
			"qualifiedName": "args"
		},
		"701": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "schema"
		},
		"702": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "__object"
		},
		"703": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "__object.array"
		},
		"704": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"705": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"706": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "El"
		},
		"707": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "schema"
		},
		"708": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "params"
		},
		"709": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "__object.boolean"
		},
		"710": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"711": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"712": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "params"
		},
		"713": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"714": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"715": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "__object.date"
		},
		"716": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"717": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"718": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "params"
		},
		"719": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"720": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"721": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "__object.enum"
		},
		"722": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "createZodEnum"
		},
		"723": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "createZodEnum"
		},
		"724": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "U"
		},
		"725": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "T"
		},
		"726": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "values"
		},
		"727": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "params"
		},
		"728": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "createZodEnum"
		},
		"729": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "U"
		},
		"730": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "T"
		},
		"731": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "values"
		},
		"732": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "params"
		},
		"733": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "__object.number"
		},
		"734": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"735": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"736": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "params"
		},
		"737": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"738": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"739": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "__object.object"
		},
		"740": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"741": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"742": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "Shape"
		},
		"743": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "shape"
		},
		"744": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "params"
		},
		"745": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "__object.string"
		},
		"746": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"747": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"748": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "params"
		},
		"749": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"750": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"751": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "__object.union"
		},
		"752": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"753": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "__type"
		},
		"754": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "Options"
		},
		"755": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "types"
		},
		"756": {
			"packageName": "zod",
			"packagePath": "dist/types/v3/types.d.ts",
			"qualifiedName": "params"
		},
		"757": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "__object.infer"
		},
		"758": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "__object.infer"
		},
		"759": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "T"
		},
		"760": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "schema"
		},
		"761": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "__object.objectId"
		},
		"762": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "__object.objectId"
		},
		"763": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "__object.ref"
		},
		"764": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "__object.ref"
		},
		"765": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "collection"
		},
		"766": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "__object.userId"
		},
		"767": {
			"packageName": "modelence",
			"packagePath": "src/data/types.ts",
			"qualifiedName": "__object.userId"
		},
		"768": {
			"packageName": "modelence",
			"packagePath": "src/methods/index.ts",
			"qualifiedName": "createQuery"
		},
		"769": {
			"packageName": "modelence",
			"packagePath": "src/methods/index.ts",
			"qualifiedName": "createQuery"
		},
		"770": {
			"packageName": "modelence",
			"packagePath": "src/methods/index.ts",
			"qualifiedName": "T"
		},
		"771": {
			"packageName": "modelence",
			"packagePath": "src/methods/index.ts",
			"qualifiedName": "name"
		},
		"772": {
			"packageName": "modelence",
			"packagePath": "src/methods/index.ts",
			"qualifiedName": "methodDef"
		},
		"773": {
			"packageName": "modelence",
			"packagePath": "src/config/server.ts",
			"qualifiedName": "getConfig"
		},
		"774": {
			"packageName": "modelence",
			"packagePath": "src/config/server.ts",
			"qualifiedName": "getConfig"
		},
		"775": {
			"packageName": "modelence",
			"packagePath": "src/config/server.ts",
			"qualifiedName": "key"
		},
		"776": {
			"packageName": "modelence",
			"packagePath": "src/app/index.ts",
			"qualifiedName": "startApp"
		},
		"777": {
			"packageName": "modelence",
			"packagePath": "src/app/index.ts",
			"qualifiedName": "startApp"
		},
		"778": {
			"packageName": "modelence",
			"packagePath": "src/app/index.ts",
			"qualifiedName": "__0"
		},
		"779": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": ""
		},
		"780": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "ModelenceQueryKey"
		},
		"781": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "T"
		},
		"782": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "U"
		},
		"783": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "createQueryKey"
		},
		"784": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "createQueryKey"
		},
		"785": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "T"
		},
		"786": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "U"
		},
		"787": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "methodName"
		},
		"788": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "args"
		},
		"789": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "modelenceMutation"
		},
		"790": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "modelenceMutation"
		},
		"791": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "T"
		},
		"792": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "methodName"
		},
		"793": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "defaultArgs"
		},
		"794": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "__object"
		},
		"795": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "__object.mutationFn"
		},
		"796": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "__function"
		},
		"797": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "__function"
		},
		"798": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "variables"
		},
		"799": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "modelenceQuery"
		},
		"800": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "modelenceQuery"
		},
		"801": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "T"
		},
		"802": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "methodName"
		},
		"803": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "args"
		},
		"804": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "__object"
		},
		"805": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "__object.queryFn"
		},
		"806": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "__function"
		},
		"807": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "__function"
		},
		"808": {
			"packageName": "@modelence/react-query",
			"packagePath": "src/index.ts",
			"qualifiedName": "__object.queryKey"
		},
		"809": {
			"packageName": "@modelence/ai",
			"packagePath": "src/index.ts",
			"qualifiedName": ""
		},
		"810": {
			"packageName": "@modelence/ai",
			"packagePath": "src/index.ts",
			"qualifiedName": "GenerateTextOptions"
		},
		"811": {
			"packageName": "@modelence/ai",
			"packagePath": "src/index.ts",
			"qualifiedName": "GenerateTextOptions.model"
		},
		"812": {
			"packageName": "@modelence/ai",
			"packagePath": "src/index.ts",
			"qualifiedName": "GenerateTextOptions.provider"
		},
		"813": {
			"packageName": "@modelence/ai",
			"packagePath": "src/index.ts",
			"qualifiedName": "generateText"
		},
		"814": {
			"packageName": "@modelence/ai",
			"packagePath": "src/index.ts",
			"qualifiedName": "generateText"
		},
		"815": {
			"packageName": "@modelence/ai",
			"packagePath": "src/index.ts",
			"qualifiedName": "options"
		}
	},
	"files": {
		"entries": {
			"1": "packages/modelence/src/server.ts",
			"2": "packages/modelence/src/client.ts",
			"3": "packages/react-query/src/index.ts",
			"4": "packages/ai/src/index.ts"
		},
		"reflections": {
			"1": 472,
			"2": 432,
			"3": 779,
			"4": 809
		}
	}
}
