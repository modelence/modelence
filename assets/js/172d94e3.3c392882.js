"use strict";(self.webpackChunkmodelence_docs=self.webpackChunkmodelence_docs||[]).push([[638],{2601:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>d,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"quick-start/tutorial-basics/add-todos-page","title":"Add Todos page","description":"Modelence is mostly frontend-agnostic, so you are free to use any routing library you like.","source":"@site/content/quick-start/tutorial-basics/add-todos-page.md","sourceDirName":"quick-start/tutorial-basics","slug":"/quick-start/tutorial-basics/add-todos-page","permalink":"/quick-start/tutorial-basics/add-todos-page","draft":false,"unlisted":false,"editUrl":"https://github.com/modelence/modelence/tree/main/docs/content/quick-start/tutorial-basics/add-todos-page.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"quickStartSidebar","previous":{"title":"Create a Module","permalink":"/quick-start/tutorial-basics/create-a-module"}}');var r=n(4848),a=n(8453);const s={sidebar_position:3},d="Add Todos page",i={},c=[{value:"Create a new client route",id:"create-a-new-client-route",level:2},{value:"Create the TodosPage component",id:"create-the-todospage-component",level:2}];function u(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"add-todos-page",children:"Add Todos page"})}),"\n",(0,r.jsx)(t.p,{children:"Modelence is mostly frontend-agnostic, so you are free to use any routing library you like.\nWe will use React Router for this example, which is what's included in the default Modelence starter."}),"\n",(0,r.jsx)(t.h2,{id:"create-a-new-client-route",children:"Create a new client route"}),"\n",(0,r.jsxs)(t.p,{children:["Edit ",(0,r.jsx)(t.code,{children:"src/client/routes.ts"})," to add a new route for our todos:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",metastring:'title="src/client/routes.ts"',children:"import { lazy } from 'react';\n\nexport const routes = [\n  ...\n  // Add this after the other routes\n  {\n    path: '/todos',\n    Component: lazy(() => import('./TodosPage'))\n  },\n  ...\n];\n"})}),"\n",(0,r.jsx)(t.h2,{id:"create-the-todospage-component",children:"Create the TodosPage component"}),"\n",(0,r.jsxs)(t.p,{children:["Create a new component at ",(0,r.jsx)(t.code,{children:"src/client/TodosPage.tsx"}),":"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",metastring:'title="src/client/TodosPage.tsx"',children:"import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { modelenceQuery, modelenceMutation } from '@modelence/react-query';\n\nexport default function TodosPage() {\n  const queryClient = useQueryClient();\n  \n  /*\n    Modelence provides `modelenceQuery` and `modelenceMutation` functions that return\n    options for TanStack Query's useQuery and useMutation hooks.\n    This gives you full access to TanStack Query's features while integrating with Modelence.\n  */\n  \n  // Basic query\n  const { data: todos, isLoading, error } = useQuery(\n    modelenceQuery('todo.getAll')\n  );\n  \n  // Query with additional TanStack Query options\n  const { data: featuredTodo } = useQuery({\n    ...modelenceQuery('todo.getFeatured'),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n    enabled: todos && todos.length > 0, // Only run if we have todos\n  });\n  \n  // Basic mutation\n  const { mutate: createTodo, isPending } = useMutation({\n    ...modelenceMutation('todo.create'),\n    onSuccess: () => {\n      // Invalidate and refetch todos after creating a new one\n      queryClient.invalidateQueries({ queryKey: ['todo.getAll'] });\n    },\n  });\n\n  const handleCreateTodo = () => {\n    createTodo({ title: 'New Todo', completed: false });\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Todos</h1>\n      <button onClick={handleCreateTodo} disabled={isPending}>\n        {isPending ? 'Creating...' : 'Create Todo'}\n      </button>\n      {featuredTodo && (\n        <div>\n          <h2>Featured Todo</h2>\n          <p>{featuredTodo.title}</p>\n        </div>\n      )}\n      <ul>\n        {todos?.map((todo) => (\n          <li key={todo.id}>{todo.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["Now, you should be able to see your page at ",(0,r.jsx)(t.a,{href:"http://localhost:3000/todos",children:"http://localhost:3000/todos"})]})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>d});var o=n(6540);const r={},a=o.createContext(r);function s(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);